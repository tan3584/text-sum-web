[{"/var/www/text-sum-web/src/index.tsx":"1","/var/www/text-sum-web/src/serviceWorker.ts":"2","/var/www/text-sum-web/src/i18n.ts":"3","/var/www/text-sum-web/src/App.tsx":"4","/var/www/text-sum-web/src/libs/stores/index.ts":"5","/var/www/text-sum-web/src/libs/utils/storage.util.ts":"6","/var/www/text-sum-web/src/libs/stores/firebase.store.ts":"7","/var/www/text-sum-web/src/libs/utils/firebase.util.ts":"8","/var/www/text-sum-web/src/libs/constants/local-storage-key.constants.ts":"9","/var/www/text-sum-web/src/libs/components/Loading/index.tsx":"10","/var/www/text-sum-web/src/themes/user/layout/theme.tsx":"11","/var/www/text-sum-web/src/libs/stores/google-map.store.ts":"12","/var/www/text-sum-web/src/libs/stores/common.store.ts":"13","/var/www/text-sum-web/src/themes/user/routers/index.tsx":"14","/var/www/text-sum-web/src/libs/utils/routes.util.ts":"15","/var/www/text-sum-web/src/themes/user/layout/index.tsx":"16","/var/www/text-sum-web/src/modules/user/routes/front/index.tsx":"17","/var/www/text-sum-web/src/modules/router.enum.ts":"18","/var/www/text-sum-web/src/modules/lang/i18n.enum.ts":"19","/var/www/text-sum-web/src/modules/article/pages/create/index.tsx":"20","/var/www/text-sum-web/src/modules/no-route/page/frontend/PageNotFound/index.tsx":"21","/var/www/text-sum-web/src/modules/user/pages/front/Login/index.tsx":"22","/var/www/text-sum-web/src/modules/user/pages/front/ForgotPassword/index.tsx":"23","/var/www/text-sum-web/src/modules/user/pages/front/ResetPassword/index.tsx":"24","/var/www/text-sum-web/src/modules/user/pages/front/Create/index.tsx":"25","/var/www/text-sum-web/src/modules/user/pages/front/Setup/index.tsx":"26","/var/www/text-sum-web/src/modules/user/pages/front/ThankYou/index.tsx":"27","/var/www/text-sum-web/src/modules/user/pages/front/VerifiedEmail/index.tsx":"28","/var/www/text-sum-web/src/modules/authentication.store.ts":"29","/var/www/text-sum-web/src/modules/user/user.enum.ts":"30","/var/www/text-sum-web/src/modules/user/user.store.ts":"31","/var/www/text-sum-web/src/modules/authenticate.service.ts":"32","/var/www/text-sum-web/src/modules/account/account.store.ts":"33","/var/www/text-sum-web/src/modules/lang/lang.store.tsx":"34","/var/www/text-sum-web/src/modules/user/components/LoginForm/index.tsx":"35","/var/www/text-sum-web/src/modules/user/user.constants.ts":"36","/var/www/text-sum-web/src/modules/user/user.service.ts":"37","/var/www/text-sum-web/src/modules/account/account.service.ts":"38","/var/www/text-sum-web/src/modules/theme/components/OnePage/index.tsx":"39","/var/www/text-sum-web/src/modules/theme/components/Wrapper/index.tsx":"40","/var/www/text-sum-web/src/modules/user/components/ForgotForm/index.tsx":"41","/var/www/text-sum-web/src/modules/user/components/ResetForm/index.tsx":"42","/var/www/text-sum-web/src/modules/user/components/RegisterForm/index.tsx":"43","/var/www/text-sum-web/src/modules/user/components/MyAccount/index.tsx":"44","/var/www/text-sum-web/src/modules/user/components/ThankYouContent/index.tsx":"45","/var/www/text-sum-web/src/libs/utils/apis.util.ts":"46","/var/www/text-sum-web/src/libs/services/index.ts":"47","/var/www/text-sum-web/src/modules/account/referenceType.enum.ts":"48","/var/www/text-sum-web/src/modules/account/components/LoginForm/index.tsx":"49","/var/www/text-sum-web/src/modules/message/message.constants.ts":"50","/var/www/text-sum-web/src/modules/lang/components/SwitchLanguages/index.tsx":"51","/var/www/text-sum-web/src/modules/theme/components/Menu/index.tsx":"52","/var/www/text-sum-web/src/modules/theme/components/TopMenu/index.tsx":"53","/var/www/text-sum-web/src/libs/components/PageTitle/index.tsx":"54","/var/www/text-sum-web/src/modules/account/components/ForgotForm/index.tsx":"55","/var/www/text-sum-web/src/modules/account/components/ResetForm/index.tsx":"56","/var/www/text-sum-web/src/modules/account/components/RegisterForm/index.tsx":"57","/var/www/text-sum-web/src/modules/user/components/AccountForm/index.tsx":"58","/var/www/text-sum-web/src/modules/account/components/ThankYouContent/index.tsx":"59","/var/www/text-sum-web/src/modules/message/message.enum.ts":"60","/var/www/text-sum-web/src/modules/lang/lang.constants.ts":"61","/var/www/text-sum-web/src/modules/theme/theme.constants.ts":"62","/var/www/text-sum-web/src/libs/constants/rules.constants.ts":"63","/var/www/text-sum-web/src/libs/enums/button.enum.ts":"64","/var/www/text-sum-web/src/modules/lang/lang.enum.ts":"65","/var/www/text-sum-web/src/modules/account/components/AccountSummary/index.tsx":"66","/var/www/text-sum-web/src/libs/components/CurrentDate/index.tsx":"67","/var/www/text-sum-web/src/modules/notification/components/Summary/index.tsx":"68","/var/www/text-sum-web/src/libs/utils/normalize.ulti.ts":"69","/var/www/text-sum-web/src/modules/notification/notification.store.ts":"70","/var/www/text-sum-web/src/modules/notification/notification.constants.ts":"71","/var/www/text-sum-web/src/modules/notification/notification.service.ts":"72"},{"size":1354,"mtime":1607600440366,"results":"73","hashOfConfig":"74"},{"size":5290,"mtime":1607605256090,"results":"75","hashOfConfig":"74"},{"size":635,"mtime":1607600440366,"results":"76","hashOfConfig":"74"},{"size":1949,"mtime":1607600440366,"results":"77","hashOfConfig":"74"},{"size":312,"mtime":1607600440373,"results":"78","hashOfConfig":"74"},{"size":1188,"mtime":1607600440374,"results":"79","hashOfConfig":"74"},{"size":265,"mtime":1607600440373,"results":"80","hashOfConfig":"74"},{"size":602,"mtime":1607600440373,"results":"81","hashOfConfig":"74"},{"size":69,"mtime":1607600440371,"results":"82","hashOfConfig":"74"},{"size":309,"mtime":1607600440371,"results":"83","hashOfConfig":"74"},{"size":129,"mtime":1607600440420,"results":"84","hashOfConfig":"74"},{"size":1988,"mtime":1607600440373,"results":"85","hashOfConfig":"74"},{"size":809,"mtime":1607600440371,"results":"86","hashOfConfig":"74"},{"size":2309,"mtime":1607600440420,"results":"87","hashOfConfig":"74"},{"size":2401,"mtime":1607600440374,"results":"88","hashOfConfig":"74"},{"size":599,"mtime":1607600440419,"results":"89","hashOfConfig":"74"},{"size":2640,"mtime":1607605061444,"results":"90","hashOfConfig":"74"},{"size":700,"mtime":1607604687759,"results":"91","hashOfConfig":"74"},{"size":26033,"mtime":1607600440378,"results":"92","hashOfConfig":"74"},{"size":1501,"mtime":1607617792261,"results":"93","hashOfConfig":"74"},{"size":263,"mtime":1607600440379,"results":"94","hashOfConfig":"74"},{"size":2537,"mtime":1607600440417,"results":"95","hashOfConfig":"74"},{"size":1695,"mtime":1607600440417,"results":"96","hashOfConfig":"74"},{"size":1850,"mtime":1607600440417,"results":"97","hashOfConfig":"74"},{"size":1953,"mtime":1607600440417,"results":"98","hashOfConfig":"74"},{"size":2107,"mtime":1607600440417,"results":"99","hashOfConfig":"74"},{"size":2110,"mtime":1607600440417,"results":"100","hashOfConfig":"74"},{"size":1622,"mtime":1607600440417,"results":"101","hashOfConfig":"74"},{"size":2155,"mtime":1607600440377,"results":"102","hashOfConfig":"74"},{"size":412,"mtime":1607600440417,"results":"103","hashOfConfig":"74"},{"size":5086,"mtime":1607600440417,"results":"104","hashOfConfig":"74"},{"size":1261,"mtime":1607600440377,"results":"105","hashOfConfig":"74"},{"size":2036,"mtime":1607600440376,"results":"106","hashOfConfig":"74"},{"size":384,"mtime":1607600440378,"results":"107","hashOfConfig":"74"},{"size":544,"mtime":1607600440416,"results":"108","hashOfConfig":"74"},{"size":3100,"mtime":1607600440417,"results":"109","hashOfConfig":"74"},{"size":3754,"mtime":1607600440417,"results":"110","hashOfConfig":"74"},{"size":1888,"mtime":1607600440376,"results":"111","hashOfConfig":"74"},{"size":1027,"mtime":1607600440415,"results":"112","hashOfConfig":"74"},{"size":1261,"mtime":1607600440416,"results":"113","hashOfConfig":"74"},{"size":505,"mtime":1607600440416,"results":"114","hashOfConfig":"74"},{"size":495,"mtime":1607600440416,"results":"115","hashOfConfig":"74"},{"size":557,"mtime":1607600440416,"results":"116","hashOfConfig":"74"},{"size":3159,"mtime":1607600440416,"results":"117","hashOfConfig":"74"},{"size":579,"mtime":1607600440416,"results":"118","hashOfConfig":"74"},{"size":598,"mtime":1607600440373,"results":"119","hashOfConfig":"74"},{"size":2279,"mtime":1607600440371,"results":"120","hashOfConfig":"74"},{"size":51,"mtime":1607600440377,"results":"121","hashOfConfig":"74"},{"size":4834,"mtime":1607600440376,"results":"122","hashOfConfig":"74"},{"size":4828,"mtime":1607600440378,"results":"123","hashOfConfig":"74"},{"size":2202,"mtime":1607600440377,"results":"124","hashOfConfig":"74"},{"size":3959,"mtime":1607600440415,"results":"125","hashOfConfig":"74"},{"size":1629,"mtime":1607600440416,"results":"126","hashOfConfig":"74"},{"size":1163,"mtime":1607600440371,"results":"127","hashOfConfig":"74"},{"size":3371,"mtime":1607600440376,"results":"128","hashOfConfig":"74"},{"size":5248,"mtime":1607600440377,"results":"129","hashOfConfig":"74"},{"size":7924,"mtime":1607600440377,"results":"130","hashOfConfig":"74"},{"size":7848,"mtime":1607600440416,"results":"131","hashOfConfig":"74"},{"size":1386,"mtime":1607600440377,"results":"132","hashOfConfig":"74"},{"size":2372,"mtime":1607600440379,"results":"133","hashOfConfig":"74"},{"size":314,"mtime":1607600440378,"results":"134","hashOfConfig":"74"},{"size":287,"mtime":1607600440416,"results":"135","hashOfConfig":"74"},{"size":236,"mtime":1607600440371,"results":"136","hashOfConfig":"74"},{"size":183,"mtime":1607600440371,"results":"137","hashOfConfig":"74"},{"size":102,"mtime":1607600440378,"results":"138","hashOfConfig":"74"},{"size":1851,"mtime":1607600440376,"results":"139","hashOfConfig":"74"},{"size":1084,"mtime":1607600440370,"results":"140","hashOfConfig":"74"},{"size":3358,"mtime":1607600440380,"results":"141","hashOfConfig":"74"},{"size":789,"mtime":1607600440374,"results":"142","hashOfConfig":"74"},{"size":2863,"mtime":1607600440380,"results":"143","hashOfConfig":"74"},{"size":430,"mtime":1607600440380,"results":"144","hashOfConfig":"74"},{"size":957,"mtime":1607600440380,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"55hdk4",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"148"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"148"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"148"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"148"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"148"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"148"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"148"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"148"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"148"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"148"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"148"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"148"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"148"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"148"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"148"},"/var/www/text-sum-web/src/index.tsx",[],["316","317"],"/var/www/text-sum-web/src/serviceWorker.ts",[],"/var/www/text-sum-web/src/i18n.ts",[],"/var/www/text-sum-web/src/App.tsx",["318","319","320"],"import React from 'react';\nimport { observer } from 'mobx-react';\nimport { FirebaseStoreContext } from './libs/stores/firebase.store';\nimport { messaging } from './libs/utils/firebase.util';\nimport { retrieveFromStorage, saveToStorage } from './libs/utils/storage.util';\nimport { LOCAL_STORAGE_KEY } from './libs/constants/local-storage-key.constants';\nimport { LanguageStoreContext } from '@/modules/lang/lang.store';\nimport { userRoutes } from './modules/user/routes/front';\nimport UserTheme from './themes/user/layout/theme';\nimport UserRouter from '@/themes/user/routers';\n\nfunction App() {\n  // const languageStore = React.useContext(LanguageStoreContext);\n  const firebaseStore = React.useContext(FirebaseStoreContext);\n  // const notiStore = React.useContext(NotificationStoreContext);\n\n  // const authStore = React.useContext(AuthenticationStoreContext);\n\n  // if ('serviceWorker' in navigator) {\n  //   // Supported!\n  //   navigator.serviceWorker.addEventListener('message', (message) => {\n  //     notiStore.getNotiList();\n  //   });\n  // }\n\n  React.useEffect(() => {\n    if (messaging) {\n      messaging\n        .getToken()\n        .then((token) => {\n          saveToStorage(LOCAL_STORAGE_KEY.DEVICE_TOKEN, token);\n        })\n        .catch(() => {\n          console.error('Permission notification - Granted');\n        });\n    }\n  }, [firebaseStore]);\n\n  // React.useEffect(() => {\n  //   const deviceId = retrieveFromStorage(LOCAL_STORAGE_KEY.DEVICE_TOKEN);\n  //   if (authStore.loggedUser && deviceId) {\n  //     authStore.registerToken(deviceId);\n  //   }\n  // }, [authStore.loggedUser, authStore]);\n\n  // React.useEffect(() => {\n  //   const lang =\n  //     retrieveFromStorage('lang') ?? process.env.REACT_APP_DEFAULT_LANG;\n  //   if (lang) {\n  //     languageStore.setActiveLanguage(lang);\n  //   }\n  // }, [languageStore]);\n\n  return (\n    <>\n      <UserTheme />\n      <UserRouter />\n    </>\n  );\n}\n\nexport default observer(App);\n","/var/www/text-sum-web/src/libs/stores/index.ts",[],"/var/www/text-sum-web/src/libs/utils/storage.util.ts",[],"/var/www/text-sum-web/src/libs/stores/firebase.store.ts",[],"/var/www/text-sum-web/src/libs/utils/firebase.util.ts",[],"/var/www/text-sum-web/src/libs/constants/local-storage-key.constants.ts",[],"/var/www/text-sum-web/src/libs/components/Loading/index.tsx",[],"/var/www/text-sum-web/src/themes/user/layout/theme.tsx",[],"/var/www/text-sum-web/src/libs/stores/google-map.store.ts",[],"/var/www/text-sum-web/src/libs/stores/common.store.ts",[],"/var/www/text-sum-web/src/themes/user/routers/index.tsx",[],"/var/www/text-sum-web/src/libs/utils/routes.util.ts",[],"/var/www/text-sum-web/src/themes/user/layout/index.tsx",[],"/var/www/text-sum-web/src/modules/user/routes/front/index.tsx",[],"/var/www/text-sum-web/src/modules/router.enum.ts",[],"/var/www/text-sum-web/src/modules/lang/i18n.enum.ts",[],"/var/www/text-sum-web/src/modules/article/pages/create/index.tsx",["321","322"],"import { AuthenticationStoreContext } from '@/modules/authentication.store';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport 'draft-js/dist/Draft.css';\nimport 'draftail/dist/draftail.css';\nimport 'draft-js-inline-toolbar-plugin/lib/plugin.css';\nimport 'draft-js-side-toolbar-plugin/lib/plugin.css';\nimport { DraftailEditor } from 'draftail';\nimport { EditorState } from 'draft-js';\nimport createInlineToolbarPlugin from 'draft-js-inline-toolbar-plugin';\nimport createSideToolbarPlugin from 'draft-js-side-toolbar-plugin';\n\nconst inlineToolbarPlugin = createInlineToolbarPlugin();\nconst { InlineToolbar } = inlineToolbarPlugin;\nconst sideToolbarPlugin = createSideToolbarPlugin();\nconst { SideToolbar } = sideToolbarPlugin;\nconst plugins = [inlineToolbarPlugin, sideToolbarPlugin];\n\nconst CreateArticlePage = () => {\n  const authStore = React.useContext(AuthenticationStoreContext);\n  const history = useHistory();\n\n  const [text, setText] = React.useState({\n    editorState: EditorState.createEmpty,\n  });\n\n  const handleChange = (text: any, medium: any) => {\n    setText(text);\n  };\n\n  return (\n    <>\n      <div className=\"app\">\n        <DraftailEditor\n          editorState={text}\n          onChange={handleChange}\n          placeholder=\"Tell your story...\"\n          plugins={plugins}\n        />\n        <InlineToolbar />\n        <SideToolbar />\n      </div>\n    </>\n  );\n};\n\nexport default observer(CreateArticlePage);\n","/var/www/text-sum-web/src/modules/no-route/page/frontend/PageNotFound/index.tsx",[],"/var/www/text-sum-web/src/modules/user/pages/front/Login/index.tsx",["323"],"import React from 'react';\nimport { observer } from 'mobx-react';\n// import { useTranslation } from 'react-i18next';\n// import { I18N } from '@/modules/lang/i18n.enum';\nimport { useHistory } from 'react-router-dom';\n// import { CustomerStoreContext } from '@/modules/customer/customer.stote';\n// import { LoginDto } from '@/modules/account/account.dto';\nimport OnePage from '@/modules/theme/components/OnePage';\nimport UserLoginForm from '@/modules/user/components/LoginForm/index';\nimport { LoginDto } from '@/modules/account.dto';\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\nimport { USER_ROUTERS } from '@/modules/router.enum';\n\nconst LoginCustomerPage = () => {\n  const history = useHistory();\n  const authenticationStore = React.useContext(AuthenticationStoreContext);\n  // const customerStore = React.useContext(CustomerStoreContext);\n\n  /*\n   * Translation\n   */\n  // const { t } = useTranslation();\n  // const { ONEPAGE_CUSTOMER_TITLE } = I18N;\n\n  /*\n   * Action of login button\n   * @params: void\n   * @return: void\n   */\n  const handleLogin = (values: any) => {\n    const loginFormValue: LoginDto = {\n      email: values.email,\n      password: values.password,\n    };\n    authenticationStore.setLoginFormValue(loginFormValue);\n    authenticationStore.login(history, USER_ROUTERS.SETUP);\n  };\n\n  /*\n   * Action of forgot password link\n   * @params: void\n   * @return: void\n   */\n  const handleForgotPassword = () => {\n    history.push(USER_ROUTERS.FORGOT_PASSWORD);\n  };\n\n  // const [userEmail, setUserEmail] = React.useState('');\n\n  /*\n   * Action of Sign up button\n   * @params: void\n   * @return: void\n   */\n  const handleSignUp = () => {\n    history.push(USER_ROUTERS.CREATE);\n  };\n\n  // const [initialValues, setInitValues] = React.useState<any>({\n  //   email: authenticationStore?.tmpUser?.email ?? '',\n  //   password: '',\n  // });\n\n  // React.useEffect(() => {\n  //   if (authenticationStore.tmpUser) {\n  //     setUserEmail(authenticationStore.tmpUser.email);\n  //     setInitValues({\n  //       email: authenticationStore?.tmpUser?.email ?? '',\n  //       password: '',\n  //     });\n  //     authenticationStore.clearTmpUser();\n  //   }\n  // }, [authenticationStore, authenticationStore.tmpUser]);\n\n  return (\n    <>\n      <OnePage title={''}>\n        <UserLoginForm\n          handleLogin={handleLogin}\n          handleForgotPassword={handleForgotPassword}\n          handleSignUp={handleSignUp}\n        />\n      </OnePage>\n    </>\n  );\n};\n\nexport default observer(LoginCustomerPage);\n","/var/www/text-sum-web/src/modules/user/pages/front/ForgotPassword/index.tsx",[],"/var/www/text-sum-web/src/modules/user/pages/front/ResetPassword/index.tsx",["324","325"],"import React from 'react';\nimport { observer } from 'mobx-react';\nimport { useTranslation } from 'react-i18next';\nimport { I18N } from '@/modules/lang/i18n.enum';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { AccountStoreContext } from '@/modules/account/account.store';\nimport OnePage from '@/modules/theme/components/OnePage';\nimport { ResetPasswordDto } from '@/modules/account/account.dto';\nimport { USER_ROUTERS } from '@/modules/router.enum';\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\nimport UserResetForm from '@/modules/user/components/ResetForm';\nconst ResetPasswordCustomerPage = () => {\n  const history = useHistory();\n  const { token } = useParams() as any;\n  const accountStore = React.useContext(AccountStoreContext);\n  const authStore = React.useContext(AuthenticationStoreContext);\n\n  /*\n   * Translation\n   */\n  const { t } = useTranslation();\n  // const {} = I18N;\n\n  /*\n   * Action of confirm button\n   * @params: void\n   * @return: void\n   */\n  const handleConfirm = async (values: any) => {\n    const resetPasswordFormValue: ResetPasswordDto = {\n      password: values.password,\n      token,\n    };\n    await authStore.clearTmpUser();\n    const result = await accountStore.resetPassword(resetPasswordFormValue);\n\n    if (result) {\n      history.push(USER_ROUTERS.LOGIN);\n    }\n  };\n\n  const callbackValidate = React.useCallback(async () => {\n    return await authStore.validateResetToken(token, history);\n  }, [authStore, history, token]);\n\n  React.useEffect(() => {\n    callbackValidate();\n  }, [callbackValidate]);\n\n  return (\n    <>\n      <OnePage title={t('')}>\n        <UserResetForm\n          handleConfirm={handleConfirm}\n          userEmail={authStore.tmpUser?.email}\n        />\n      </OnePage>\n    </>\n  );\n};\n\nexport default observer(ResetPasswordCustomerPage);\n","/var/www/text-sum-web/src/modules/user/pages/front/Create/index.tsx",["326","327"],"import React from 'react';\nimport { observer } from 'mobx-react';\nimport { useTranslation } from 'react-i18next';\nimport { I18N } from '@/modules/lang/i18n.enum';\nimport { CreateUserDto } from '@/modules/account.dto';\nimport { AccountStoreContext } from '@/modules/account/account.store';\nimport { LanguageStoreContext } from '@/modules/lang/lang.store';\nimport OnePage from '@/modules/theme/components/OnePage';\nimport { THANKYOU_ACTION } from '@/modules/user/user.enum';\nimport { useHistory } from 'react-router-dom';\nimport UserRegisterForm from '@/modules/user/components/RegisterForm';\nimport { USER_ACTION_ROUTERS } from '@/modules/router.enum';\n\nconst CreateUserPage = () => {\n  const accountStore = React.useContext(AccountStoreContext);\n  const history = useHistory();\n  const languageStore = React.useContext(LanguageStoreContext);\n\n  /*\n   * Translation\n   */\n  const { t } = useTranslation();\n  const { ONEPAGE_CUSTOMER_TITLE } = I18N;\n\n  /*\n   * Setting required fields of register form\n   * @params: void\n   * @return: json\n   */\n  const requiredFields = {\n    email: true,\n    password: true,\n    confirmPassword: true,\n    phone: false,\n  };\n\n  /*\n   * Action of Sign up button\n   * @params: void\n   * @return: void\n   */\n  const handleSignUp = async (values: any) => {\n    const createUserData: CreateUserDto = {\n      email: values.email.trim(),\n      password: values.password,\n      phoneNumber: values.phone,\n    };\n\n    accountStore.setCreateUserForm(createUserData);\n    const result = await accountStore.register(languageStore.activeLanguage);\n    if (result) {\n      accountStore.resetCreateUserForm();\n      history.push(USER_ACTION_ROUTERS.THANKYOU + THANKYOU_ACTION.REGISTER);\n    }\n  };\n\n  return (\n    <>\n      <OnePage title={t('')}>\n        <UserRegisterForm\n          handleRegister={handleSignUp}\n          required={requiredFields}\n        />\n      </OnePage>\n    </>\n  );\n};\n\nexport default observer(CreateUserPage);\n","/var/www/text-sum-web/src/modules/user/pages/front/Setup/index.tsx",["328"],"import React from 'react';\nimport { observer } from 'mobx-react';\n// import { toast } from 'react-toastify';\n\nimport { useTranslation } from 'react-i18next';\nimport { I18N } from '@/modules/lang/i18n.enum';\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\nimport { UserStoreContext } from '@/modules/user/user.store';\nimport WrapperTheme from '@/modules/theme/components/Wrapper';\nimport UserMyAccount from '@/modules/user/components/MyAccount';\n\nconst SetupUserPage = () => {\n  const authStore = React.useContext(AuthenticationStoreContext);\n  const userStore = React.useContext(UserStoreContext);\n\n  /*\n   * Translation\n   */\n  const { t } = useTranslation();\n  const { MENU_ACCOUNT_SETUP } = I18N;\n\n  // -----------------------------\n  // Account Section\n  // -----------------------------\n  const [companyType, setCompanyType] = React.useState(false);\n\n  const handleChangeType = async (value: boolean) => {\n    setCompanyType(value);\n  };\n\n  // const uploadFiles = async () => {};\n\n  // const handleSubmit = async (values: any) => {};\n\n  // const handleUploadIcon = (event: any) => {\n  //   const file = event.target.files[0];\n  //   setCompanyIco({ file: file });\n  // };\n\n  // React.useEffect(() => {\n\n  //   if (authStore.loggedUser?.accountRole !== 0) {\n  //     userStore.getCompany();\n  //   }\n  // // }, [userStore, authStore.loggedUser]);\n\n  // React.useEffect(() => {\n  //   setCompanyType(\n  //     typeof authStore.loggedUser?.companyId === 'number' ? true : false\n  //   );\n  //   if (typeof authStore.loggedUser?.companyId === 'number') {\n  //     setCompanyActionMode(ACTION_MODE.EDIT);\n  //   }\n  // }, [userStore.company, authStore.loggedUser]);\n\n  React.useEffect(() => {}, [authStore.loggedUser]);\n\n  return (\n    <>\n      <WrapperTheme pageTitle={t(MENU_ACCOUNT_SETUP)}>\n        {authStore.loggedUser && (\n          <>\n            <UserMyAccount\n              handleChangeType={handleChangeType}\n              companyType={companyType}\n            />\n          </>\n        )}\n      </WrapperTheme>\n    </>\n  );\n};\n\nexport default observer(SetupUserPage);\n","/var/www/text-sum-web/src/modules/user/pages/front/ThankYou/index.tsx",["329"],"import React from 'react';\nimport { observer } from 'mobx-react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { I18N } from '@/modules/lang/i18n.enum';\nimport IconThankTadaTruck from '@/libs/assets/images/icon-thank-tadatruck.png';\nimport { USER_ROUTERS } from '@/modules/router.enum';\nimport UserThankYouContent from '@/modules/user/components/ThankYouContent';\nimport OnePage from '@/modules/theme/components/OnePage';\n\nconst ThankYouCustomerPage = () => {\n  const history = useHistory();\n\n  /*\n   * Getting parameter from the route\n   */\n  const params: any = useParams();\n  const { action } = params;\n\n  /*\n   * Translation\n   */\n  const { t } = useTranslation();\n  const {\n    ONEPAGE_CUSTOMER_TITLE,\n    ACCOUNT_THANKYOU,\n    ACCOUNT_THANKYOU_CREATED,\n    ACCOUNT_THANKYOU_CREATEDNOTE,\n    ACCOUNT_THANKYOU_RESETPW,\n    ACCOUNT_THANKYOU_RESETPWNOTE,\n    BUTTONS_LOGIN,\n  } = I18N;\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      history.push(USER_ROUTERS.LOGIN);\n    }, 10000);\n    return () => clearTimeout(timeout);\n  }, [history]);\n\n  return (\n    <>\n      <OnePage className=\"thank-you-page\" title={t('')}>\n        {action === 'register' && (\n          <UserThankYouContent\n            title={t(ACCOUNT_THANKYOU)}\n            subTitle={t(ACCOUNT_THANKYOU_CREATED)}\n            iconSuccess={IconThankTadaTruck}\n            btnText={t(BUTTONS_LOGIN)}\n            handleBtn={() => history.push(USER_ROUTERS.LOGIN)}\n          >\n            {t(ACCOUNT_THANKYOU_CREATEDNOTE)}\n          </UserThankYouContent>\n        )}\n        {action === 'resetpassword' && (\n          <UserThankYouContent\n            title={t(ACCOUNT_THANKYOU)}\n            subTitle={t(ACCOUNT_THANKYOU_RESETPW)}\n            iconSuccess={IconThankTadaTruck}\n            btnText={t(BUTTONS_LOGIN)}\n            handleBtn={() => history.push(USER_ROUTERS.LOGIN)}\n          >\n            {t(ACCOUNT_THANKYOU_RESETPWNOTE)}\n          </UserThankYouContent>\n        )}\n      </OnePage>\n    </>\n  );\n};\n\nexport default observer(ThankYouCustomerPage);\n","/var/www/text-sum-web/src/modules/user/pages/front/VerifiedEmail/index.tsx",[],"/var/www/text-sum-web/src/modules/authentication.store.ts",["330"],"import React from 'react';\nimport { observable, action } from 'mobx';\nimport { removeFromStorage, saveToStorage } from '@/libs/utils/storage.util';\nimport { LoginDto } from './account.dto';\nimport authenticateService from './authenticate.service';\n\nexport default class AuthenticationStore {\n  @observable loggedUser: any = null;\n  @observable tmpUser: any = null;\n  @observable loginFormValue: LoginDto = {\n    email: '',\n    password: '',\n  };\n\n  @action\n  async setLoginFormValue(data: LoginDto) {\n    this.loginFormValue = data;\n  }\n\n  @action\n  async setLoggedUser(data: any) {\n    this.loggedUser = data;\n  }\n\n  @action\n  async clearTmpUser() {\n    this.tmpUser = null;\n  }\n\n  @action\n  async login(history: any, url: string) {\n    const data = await authenticateService.login(this.loginFormValue);\n    if (data) {\n      this._setCurrentInfo(data);\n      this._redirectAfterLogin(history, url);\n    }\n  }\n\n  @action\n  async validateToken(token: string, history: any) {\n    const data = await authenticateService.validateToken(token);\n    if (data) {\n      this._saveUser(data);\n    }\n  }\n\n  @action\n  async validateResetToken(token: string, history: any) {\n    const data = await authenticateService.validateResetToken(token);\n    if (data) {\n      this.tmpUser = data;\n    }\n  }\n\n  @action\n  async logout(history: any, url: string) {\n    removeFromStorage('token');\n    this.loggedUser = null;\n    history.push(url);\n  }\n\n  private _setCurrentInfo(data: any) {\n    this.loggedUser = data;\n    saveToStorage('token', data.token);\n  }\n\n  private _saveUser(data: any) {\n    this.loggedUser = data;\n  }\n\n  private _redirectAfterLogin(history: any, url: string) {\n    return history.push(url);\n  }\n\n  // @action\n  // async registerToken(token: string) {\n  //   const result = await authenticateService.registerToken(token);\n  //   return result;\n  // }\n\n  @action\n  async validateEmailToken(token: string) {\n    const result = await authenticateService.validateEmailToken(token);\n    if (result) {\n      this.tmpUser = result;\n    }\n    return result;\n  }\n}\n\nexport const AuthenticationStoreContext = React.createContext(\n  new AuthenticationStore()\n);\n","/var/www/text-sum-web/src/modules/user/user.enum.ts",[],"/var/www/text-sum-web/src/modules/user/user.store.ts",["331","332","333"],"import React from 'react';\nimport { observable, action } from 'mobx';\nimport { USER_STATUS, VERIFIED_STATUS } from './user.enum';\nimport {\n  UserRequestDto,\n  UpdateUserRequestDto,\n  UserUpdateFormDto,\n} from './user.dto';\nimport {\n  userRequestInit,\n  newUserInit,\n  userUpdateFormInit,\n} from './user.constants';\nimport userService from './user.service';\n\nexport default class UserStore {\n  @observable userRequestDto: UserRequestDto = userRequestInit;\n\n  // Account Setup\n  @observable accountForm: UpdateUserRequestDto = newUserInit;\n  @observable currentUserDetail: any = null;\n\n  // Admin - Listing\n  @observable users: any[] = [];\n  @observable totalCount: number = 0;\n\n  @observable deletedUsers: any[] = [];\n  @observable totalDeletedCount: number = 0;\n\n  // Admin - Edit Account\n  // @observable accountForm: UpdateUserRequestDto = newUserInit;\n  @observable userAdmin: any = null;\n  @observable\n  userUpdateForm: UserUpdateFormDto = userUpdateFormInit;\n\n  // Admin - Create User\n  // @observable\n  // adminUserForm: AdminUserRequestDto = adminUserFormInit;\n  @action\n  async setUserRequestDto(data: UserRequestDto) {\n    this.userRequestDto = data;\n  }\n\n  @action\n  async setUserUpdateForm(data: any) {\n    // this.userUpdateForm = data;\n    this.userUpdateForm.phoneNumber = data.phoneNumber ?? '';\n    this.userUpdateForm.email = data.email ?? '';\n    this.userUpdateForm.firstName = data.firstName ?? '';\n    this.userUpdateForm.lastName = data.lastName ?? '';\n    this.userUpdateForm.userStatus = +data.userStatus ?? USER_STATUS.ACTIVE;\n    this.userUpdateForm.verifiedStatus =\n      +data.verifiedStatus ?? VERIFIED_STATUS.UNVERIFIED;\n  }\n\n  // ----------------------------\n  // Account Setup\n  // ----------------------------\n  @action\n  async setAccountForm(data: any) {\n    this.accountForm.phoneNumber = data.phoneNumber;\n    this.accountForm.firstName = data.firstName;\n  }\n\n  @action\n  async getAccountInfo() {\n    const data = await userService.getAccountInfo();\n    this.currentUserDetail = data;\n    return data;\n  }\n\n  @action\n  async updateAccount(id: number) {\n    const data = await userService.updateAccount(this.accountForm, id);\n    return data;\n  }\n\n  @action\n  async uploadAvatar(formData: any, id: number) {\n    const data = await userService.uploadAvatar(formData, id);\n    return data;\n  }\n\n  @action\n  async deleteAccountFile(id: number, type: number) {\n    const data = await userService.deleteFiles(id, type);\n    return data;\n  }\n\n  // ----------------------------\n  // Admin\n  // ----------------------------\n\n  //\n  // User\n  //\n  // @action\n  // async setAdminUserForm(data: any) {\n  //   this.adminUserForm.firstName = data.firstName ?? '';\n  //   this.adminUserForm.lastName = data.lastName ?? '';\n  //   this.adminUserForm.email = data.email ?? '';\n  //   this.adminUserForm.phoneNumber = data.phoneNumber;\n  //   this.adminUserForm.accountRole = +data.accountRole;\n  // }\n\n  // @action\n  // async resetAdminUserForm() {\n  //   this.adminUserForm = adminUserFormInit;\n  // }\n\n  // public async addUserByAdmin() {\n  //   const data = await userService.addUserByAdmin(this.adminUserForm);\n  //   return data;\n  // }\n\n  // @action\n  // async deleteUserByIdByAdmin(id: number) {\n  //   const data = await userService.deleteUserByAdmin(id);\n  //   return data;\n  // }\n\n  // @action\n  // async verifyUserByAdmin(id: number) {\n  //   const data = await userService.verifyUserByAdmin(id);\n  //   return data;\n  // }\n\n  // @action\n  // async getUserByAdmin(filter: UserListDto) {\n  //   const data = await userService.getUserByAdmin(filter);\n  //   const [users, count] = data;\n  //   this.users = users;\n  //   this.totalCount = count;\n  //   return data;\n  // }\n\n  // @action\n  // async getDeletedUserByAdmin(filter: UserListDto) {\n  //   const data = await userService.getDeletedUserByAdmin(filter);\n  //   const [users, count] = data;\n  //   this.deletedUsers = users;\n  //   this.totalDeletedCount = count[0].total;\n  //   return data;\n  // }\n\n  // @action\n  // async createUserByAdmin() {\n  //   const data = await userService.createUserByAdmin(this.userRequestDto);\n  //   return data;\n  // }\n\n  // @action\n  // async getUserByIdByAdmin(id: number) {\n  //   const data = await userService.getUserByIdByAdmin(id);\n  //   this.userAdmin = null;\n  //   this.userAdmin = data;\n  //   return data;\n  // }\n\n  // @action\n  // async updateUserByAdmin(id: number) {\n  //   const data = await userService.updateUserByAdmin(this.userUpdateForm, id);\n  //   return data;\n  // }\n\n  // @action\n  // async restoreUserByIdByAdmin(id: number) {\n  //   const data = await userService.restoreUserByIdByAdmin(id);\n  //   return data;\n  // }\n\n  // @action\n  // async uploadAvatarByAdmin(formData: any, id: number) {\n  //   const data = await userService.uploadAvatarByAdmin(formData, id);\n  //   return data;\n  // }\n\n  // @action\n  // async deleteAccountFileByAdmin(id: number, type: number) {\n  //   const data = await userService.deleteFilesByAdmin(id, type);\n  //   return data;\n  // }\n}\n\nexport const UserStoreContext = React.createContext(new UserStore());\n","/var/www/text-sum-web/src/modules/authenticate.service.ts",["334"],"import http from '@/libs/services';\nimport { LoginDto } from './account.dto';\n\nclass AuthenticateService {\n  private _getPrefix = () => {\n    return 'api/user';\n  };\n\n  accountPrefix: string = this._getPrefix();\n\n  public async login(model: LoginDto) {\n    const result = await http.post(`${this.accountPrefix}/login`, model);\n    return result.data?.result;\n  }\n\n  public async validateToken(token: string) {\n    const result = await http.post(`${this.accountPrefix}/check-token`, {\n      token,\n    });\n    return result.data?.result;\n  }\n\n  public async validateResetToken(token: string) {\n    const result = await http.post(`${this.accountPrefix}/check-reset-token`, {\n      token,\n    });\n    return result.data?.result;\n  }\n\n  // public async registerToken(token: string) {\n  //   const result = await http.post(\n  //     `${NOTIFICATION_API.PREFIX}/${NOTIFICATION_API.REGISTER}`,\n  //     {\n  //       token,\n  //       platform: 'web',\n  //     }\n  //   );\n  //   return result.data?.result;\n  // }\n\n  public async validateEmailToken(token: string) {\n    const commonUserPrefix = 'api/user';\n    const result = await http.get(`${commonUserPrefix}/verify-email/${token}`);\n    return result.data?.result;\n  }\n}\n\nexport default new AuthenticateService();\n","/var/www/text-sum-web/src/modules/account/account.store.ts",["335","336","337","338"],"import React from 'react';\nimport { observable, action } from 'mobx';\nimport accountService from '@/modules/account/account.service';\nimport {\n  UserTableDto,\n  CreateUserDto,\n  ResetPasswordDto,\n  SetPasswordDto,\n} from '@/modules/account/account.dto';\n\nclass AccountStore {\n  @observable users: UserTableDto[] = [];\n  @observable totalCount: number = 0;\n  @observable currentUserDetail: any = null;\n  @observable createUserForm: CreateUserDto = {\n    email: '',\n    password: '',\n    phoneNumber: '',\n  };\n\n  @observable resetPasswordFormValue: ResetPasswordDto = {\n    token: '',\n    password: '',\n  };\n\n  @action\n  async setCreateUserForm(data: CreateUserDto) {\n    this.createUserForm = data;\n  }\n\n  @action\n  async setResetPasswordFormValue(data: ResetPasswordDto) {\n    this.resetPasswordFormValue = data;\n  }\n\n  @action\n  async register(lang: string) {\n    const data = await accountService.register(this.createUserForm, lang);\n    return data;\n  }\n\n  @action\n  async forgotPassword(email: string, lang: string) {\n    const data = await accountService.forgotPassword(email, lang);\n    return data;\n  }\n\n  @action\n  async resetCreateUserForm() {\n    this.createUserForm = {\n      email: '',\n      password: '',\n      phoneNumber: '',\n    };\n  }\n\n  @action\n  async changePassword(history: any, userID: number, url: string) {\n    const data = await accountService.changePassword(\n      userID,\n      this.resetPasswordFormValue\n    );\n    if (data) {\n      history.push(url);\n    }\n  }\n\n  @action\n  async resetPassword(model: ResetPasswordDto) {\n    const data = await accountService.resetPassword(model);\n    return data;\n  }\n\n  @action\n  async changeLanguage(id: number, token: string, language: string) {\n    return await accountService.changeLanguage(id, token, language);\n  }\n\n  @action\n  async setPassword(model: SetPasswordDto) {\n    const data = await accountService.setPassword(model);\n    return data;\n  }\n}\n\nexport default new AccountStore();\n\nexport const AccountStoreContext = React.createContext(new AccountStore());\n","/var/www/text-sum-web/src/modules/lang/lang.store.tsx",[],"/var/www/text-sum-web/src/modules/user/components/LoginForm/index.tsx",[],"/var/www/text-sum-web/src/modules/user/user.constants.ts",["339","340","341"],"import { VERIFIED_STATUS, USER_STATUS } from '@/modules/user/user.enum';\nimport { I18N } from '@/modules/lang/i18n.enum';\nimport {\n  UserRequestDto,\n  UpdateUserRequestDto,\n  UserUpdateFormDto,\n} from './user.dto';\n\nexport const VerifiedStatus = [\n  {\n    key: VERIFIED_STATUS.UNVERIFIED,\n    label: I18N.STATUS_UNVERIFIED,\n  },\n  {\n    key: VERIFIED_STATUS.PENDING,\n    label: I18N.STATUS_PENDING,\n  },\n  {\n    key: VERIFIED_STATUS.VERIFIED,\n    label: I18N.STATUS_VERIFIED,\n  },\n];\n\nexport const EmailVerifiedStatus = [\n  {\n    key: true,\n    label: I18N.STATUS_VERIFIED,\n  },\n  {\n    key: false,\n    label: I18N.STATUS_UNVERIFIED,\n  },\n];\n\nexport const getVerifiedStatus = (t: any, key: any) => {\n  return t(VerifiedStatus.find((item) => item.key === key)?.label);\n};\n\nexport const getEmailVerifiedStatus = (t: any, key: any) => {\n  return t(EmailVerifiedStatus.find((item) => item.key === key)?.label);\n};\n\nexport const getKeyVerifiedStatus = (label: string) => {\n  return VerifiedStatus.find((item) => item.label === label)?.key;\n};\n\nexport const UserStatus = [\n  {\n    key: USER_STATUS.ACTIVE,\n    label: I18N.USER_STATUS_ACTIVE,\n  },\n  {\n    key: USER_STATUS.INACTIVE,\n    label: I18N.USER_STATUS_INACTIVE,\n  },\n];\n\nexport const getUserStatus = (t: any, key: any) => {\n  return t(UserStatus.find((item) => item.key === key)?.label);\n};\n\nexport const getKeyUserStatus = (label: string) => {\n  return UserStatus.find((item) => item.label === label)?.key;\n};\n\n// export const AccountRole = [\n//   {\n//     key: ACCOUNT_ROLE.OWNER,\n//     label: I18N.CUSTOMER_ROLE_OWNER,\n//   },\n//   {\n//     key: ACCOUNT_ROLE.ADMIN,\n//     label: I18N.CUSTOMER_ROLE_ADMIN,\n//   },\n//   {\n//     key: ACCOUNT_ROLE.EXECUTIVE,\n//     label: I18N.CUSTOMER_ROLE_EXECUTIVE,\n//   },\n// ];\n\n// export const getAccountRole = (t: any, key: any) => {\n//   return key\n//     ? t(AccountRole.find((item) => item.key === key)?.label)\n//     : t(I18N.CUSTOMER_ROLE_OWNER);\n// };\n\n// export const getKeyAccountRole = (label: string) => {\n//   return AccountRole.find((item) => item.label === label)?.key;\n// };\n\n// export const AccountType = [\n//   {\n//     key: ACCOUNT_TYPE.COMPANY,\n//     label: I18N.CUSTOMER_TYPE_COMPANY,\n//   },\n//   {\n//     key: ACCOUNT_TYPE.INDIVIDUAL,\n//     label: I18N.CUSTOMER_TYPE_INDIVIDUAL,\n//   },\n// ];\n\n// export const getAccountType = (t: any, key: any) => {\n//   return t(AccountType.find((item) => item.key === key)?.label);\n// };\n\nexport const userRequestInit: UserRequestDto = {\n  email: '',\n  password: '',\n  phoneNumber: '',\n};\n\nexport const newUserInit: UpdateUserRequestDto = {\n  // phone: '',\n  // email: '',\n  // firstName: '',\n  // lastName: '',\n  // password: '',\n  // cardNo: '',\n};\n\n// Admin\n\nexport const userUpdateFormInit: UserUpdateFormDto = {\n  phoneNumber: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  userStatus: USER_STATUS.INACTIVE,\n  verifiedStatus: VERIFIED_STATUS.UNVERIFIED,\n};\n\nexport const userDto = {\n  accountRole: '',\n  cardNo: '',\n  createdDate: '',\n  deletedAt: '',\n  email: '',\n  firstName: '',\n  id: '',\n  phoneNumber: '',\n  verifiedStatus: 0,\n};\n","/var/www/text-sum-web/src/modules/user/user.service.ts",["342"],"import http from '@/libs/services';\nimport { UpdateUserRequestDto } from '@/modules/user/user.dto';\n\nclass UserService {\n  prefix: string = 'api/user';\n  // adminPrefix: string = CUSTOMER_API.ADMIN_PREFIX;\n\n  // TODO: sort order all functions of this file\n  // ----------------------------\n  // Account\n  // ----------------------------\n\n  public async getAccountInfo() {\n    const result = await http.get(`${this.prefix}/info`);\n    return result.data?.result;\n  }\n\n  public async updateAccount(model: UpdateUserRequestDto, id: number) {\n    const result = await http.put(`${this.prefix}/${id}`, model);\n    return result.data?.result;\n  }\n\n  public async uploadCardFront(data: any, id: number) {\n    const form = new FormData();\n    form.append('image', data);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n\n    const result = await http.post(\n      `${this.prefix}/${id}/upload-card-front`,\n      form,\n      config\n    );\n    return result.data?.result;\n  }\n\n  public async uploadCardBack(data: any, id: number) {\n    const form = new FormData();\n    form.append('image', data);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n\n    const result = await http.post(\n      `${this.prefix}/${id}/upload-card-back`,\n      form,\n      config\n    );\n    return result.data?.result;\n  }\n\n  public async uploadAvatar(data: any, id: number) {\n    const form = new FormData();\n    form.append('image', data);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n\n    const result = await http.post(\n      `${this.prefix}/${id}/upload-profile-img`,\n      form,\n      config\n    );\n    return result.data?.result;\n  }\n\n  public async deleteFiles(id: number, type: number) {\n    const result = await http.delete(`${this.prefix}/files/${id}/${type}`);\n    return result.data?.result;\n  }\n\n  // ----------------------------\n  // Admin\n  // ----------------------------\n\n  //\n  // User\n  //\n  // public async addUserByAdmin(model: AdminUserRequestDto) {\n  //   const result = await http.post(`${this.adminPrefix}`, model);\n  //   return result.data?.result;\n  // }\n\n  // public async deleteUserByAdmin(id: number) {\n  //   const result = await http.delete(`${this.adminPrefix}/${id}`);\n  //   return result.data?.result;\n  // }\n\n  // public async verifyUserByAdmin(id: number) {\n  //   const result = await http.put(\n  //     `${this.adminPrefix}/${id}/email-verification`\n  //   );\n  //   return result.data?.result;\n  // }\n\n  // public async getUserByAdmin(criteria: UserListDto) {\n  //   const result = await http.get(\n  //     `${this.adminPrefix}${prepareGetQuery({ ...criteria })}`\n  //   );\n  //   return result.data?.result;\n  // }\n\n  // public async getDeletedUserByAdmin(criteria: UserListDto) {\n  //   const result = await http.get(\n  //     `${this.adminPrefix}/deleted${prepareGetQuery({ ...criteria })}`\n  //   );\n  //   return result.data?.result;\n  // }\n\n  // public async createUserByAdmin(model: UserRequestDto) {\n  //   const result = await http.post(`${this.adminPrefix}`, model);\n  //   return result.data?.result;\n  // }\n\n  // public async getUserByIdByAdmin(id: number) {\n  //   const result = await http.get(`${this.adminPrefix}/${id}`);\n  //   return result.data?.result;\n  // }\n\n  // public async updateUserByAdmin(model: UserUpdateFormDto, id: number) {\n  //   const result = await http.put(`${this.adminPrefix}/${id}`, model);\n  //   return result.data?.result;\n  // }\n\n  // public async restoreUserByIdByAdmin(id: number) {\n  //   const result = await http.post(`${this.adminPrefix}/${id}/restore`);\n  //   return result.data?.result;\n  // }\n}\n\nexport default new UserService();\n","/var/www/text-sum-web/src/modules/account/account.service.ts",["343","344","345","346"],"import http from '@/libs/services';\nimport { removeConfirmationFields } from '@/libs/utils/apis.util';\nimport {\n  CreateUserDto,\n  ResetPasswordDto,\n  UpdateAccountDto,\n  SetPasswordDto,\n} from '@/modules/account/account.dto';\n\nclass AccountService {\n  private _getPrefix = () => {\n    return 'api/user';\n  };\n\n  accountPrefix: string = this._getPrefix();\n\n  public async forgotPassword(email: string, lang: string) {\n    const result = await http.get(\n      `${this.accountPrefix}/forgot-password/${lang}?email=${email}`\n    );\n    return result.data?.result;\n  }\n\n  public async changePassword(id: number, model: ResetPasswordDto) {\n    const result = await http.post(\n      `${this.accountPrefix}/${id}/change-password`,\n      model\n    );\n    return result.data?.result;\n  }\n\n  public async resetPassword(model: ResetPasswordDto) {\n    const result = await http.post(\n      `${this.accountPrefix}/reset-password`,\n      model\n    );\n    return result.data?.result;\n  }\n\n  public async setPassword(model: SetPasswordDto) {\n    const result = await http.post(`${this.accountPrefix}/set-password`, model);\n    return result.data?.result;\n  }\n\n  public async register(model: CreateUserDto, lang: string) {\n    const excludedModel = removeConfirmationFields(model);\n    const result = await http.post(\n      `${this.accountPrefix}/${lang}`,\n      excludedModel\n    );\n    return result.data?.result;\n  }\n\n  public async updateAccount(id: number, model: UpdateAccountDto) {\n    const excludedModel = removeConfirmationFields(model);\n    const result = await http.put(`${this.accountPrefix}/${id}`, excludedModel);\n    return result.data?.result;\n  }\n\n  public async changeLanguage(id: number, token: string, language: string) {\n    const result = await http.put(`api/user/lang/${language}`, {\n      token,\n    });\n    return result.data?.result;\n  }\n}\n\nexport default new AccountService();\n","/var/www/text-sum-web/src/modules/theme/components/OnePage/index.tsx",["347"],"import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport logo from '@/modules/theme/assets/images/logo.svg';\nimport SwitchLanguages from '@/modules/lang/components/SwitchLanguages';\n\n/*\n * Props of Component\n */\ninterface ComponentProps {\n  style?: React.CSSProperties;\n  className?: string;\n  children?: React.ReactNode;\n  title?: string;\n}\n\nconst OnePage = (props: ComponentProps) => {\n  /*\n   * Props of Component\n   */\n  const { style, className, children, title } = props;\n\n  return (\n    <>\n      <div\n        className={`wrapper one-page ${className ? className : ''}`}\n        style={style}\n      >\n        <div className=\"main\">\n          <header className=\"header\">\n            {/* <a href=\"/\" title=\"Jad\" className=\"logo\">\n              <img alt=\"Jad\" src={logo} />\n            </a> */}\n            <SwitchLanguages />\n            <div className=\"header-title\">{title}</div>\n          </header>\n          {children}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default observer(OnePage);\n","/var/www/text-sum-web/src/modules/theme/components/Wrapper/index.tsx",[],"/var/www/text-sum-web/src/modules/user/components/ForgotForm/index.tsx",[],"/var/www/text-sum-web/src/modules/user/components/ResetForm/index.tsx",[],"/var/www/text-sum-web/src/modules/user/components/RegisterForm/index.tsx",[],"/var/www/text-sum-web/src/modules/user/components/MyAccount/index.tsx",["348"],"import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useTranslation } from 'react-i18next';\nimport { I18N } from '@/modules/lang/i18n.enum';\n\nimport UserAccountForm from '@/modules/user/components/AccountForm';\n\nimport { toast } from 'react-toastify';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\n\nimport { REFERENCE_TYPE } from '@/modules/account/referenceType.enum';\nimport { UserStoreContext } from '../../user.store';\n\ninterface ComponentProps {\n  className?: string;\n  children?: React.ReactNode;\n  handleChangeType?: any;\n  companyType: boolean;\n}\n\nconst UserMyAccount = (props: ComponentProps) => {\n  const authStore = React.useContext(AuthenticationStoreContext);\n  const userStore = React.useContext(UserStoreContext);\n\n  /*\n   * Props of Component\n   */\n  const { className, children, handleChangeType, companyType } = props;\n\n  /*\n   * Translation\n   */\n  const { t } = useTranslation();\n  const { MESSAGES_UPDATE_SUCCESS, MESSAGES_DELETE_SUCCESS } = I18N;\n\n  const [avatar, setAvatar] = React.useState({\n    file: null,\n  });\n\n  const [initData, setInitData] = React.useState<any>(null);\n\n  const handleSubmit = async (values: any) => {\n    if (!companyType) {\n      values.companyId = null;\n    }\n    userStore.setAccountForm(values);\n    const data = await userStore.updateAccount(authStore.loggedUser.id);\n    if (data) {\n      const user = await userStore.getAccountInfo();\n      authStore.setLoggedUser(user ?? authStore.loggedUser);\n      toast.dismiss();\n      toast.success(t(MESSAGES_UPDATE_SUCCESS));\n    }\n  };\n\n  /*\n   * Action of Delete button\n   *\n   * @param number id\n   * @return void\n   */\n  const handleDelete = async (type: REFERENCE_TYPE) => {\n    if (type === REFERENCE_TYPE.USER_PROFILE_IMG) {\n      const result = userStore.deleteAccountFile(\n        authStore.loggedUser.id,\n        REFERENCE_TYPE.USER_PROFILE_IMG\n      );\n      if (result) {\n        authStore.loggedUser.avatarUrl = '';\n        toast.dismiss();\n        bsCustomFileInput.init();\n        toast.success(t(MESSAGES_DELETE_SUCCESS));\n      }\n    }\n  };\n\n  const handleUploadAvatar = (event: any) => {\n    setAvatar({ file: event.target.files[0] });\n  };\n\n  React.useEffect(() => {\n    if (authStore.loggedUser) {\n      authStore.loggedUser.cardNo = authStore.loggedUser.cardNo ?? '';\n      authStore.loggedUser.phoneNumber = authStore.loggedUser.phoneNumber ?? '';\n      authStore.loggedUser.email = authStore.loggedUser.email ?? '';\n      authStore.loggedUser.firstName = authStore.loggedUser.firstName ?? '';\n      setInitData(authStore.loggedUser);\n    }\n  }, [authStore.loggedUser]);\n\n  return (\n    <>\n      {initData && (\n        <UserAccountForm\n          className={className}\n          children={children}\n          handleSubmitForm={handleSubmit}\n          initialValues={initData}\n          handleUploadAvatar={handleUploadAvatar}\n          handleDeleteFiles={handleDelete}\n          handleChangeType={handleChangeType}\n          companyType={companyType}\n        />\n      )}\n    </>\n  );\n};\n\nexport default observer(UserMyAccount);\n","/var/www/text-sum-web/src/modules/user/components/ThankYouContent/index.tsx",[],"/var/www/text-sum-web/src/libs/utils/apis.util.ts",[],"/var/www/text-sum-web/src/libs/services/index.ts",[],"/var/www/text-sum-web/src/modules/account/referenceType.enum.ts",[],"/var/www/text-sum-web/src/modules/account/components/LoginForm/index.tsx",[],"/var/www/text-sum-web/src/modules/message/message.constants.ts",["349"],"import { ErrorDto } from '@/modules/message/message.dto';\nimport { ERRORS } from '@/modules/message/message.enum';\nimport { I18N } from '@/modules/lang/i18n.enum';\n\nexport const Errors: ErrorDto[] = [\n  {\n    key: ERRORS.SELECTED_ITEMS,\n    label: I18N.MESSAGES_SELECTED_ITEMS,\n  },\n  {\n    key: ERRORS.FORGOT_SUCCESS,\n    label: I18N.MESSAGES_FORGOT_SUCCESS,\n  },\n  {\n    key: ERRORS.CONFIRM_DELETE,\n    label: I18N.MESSAGES_CONFIRM_DELETE,\n  },\n  {\n    key: ERRORS.CONFIRM_CANCEL,\n    label: I18N.MESSAGES_CONFIRM_CANCEL,\n  },\n  {\n    key: ERRORS.DELETE_SUCCESS,\n    label: I18N.MESSAGES_DELETE_SUCCESS,\n  },\n  {\n    key: ERRORS.UPDATE_SUCCESS,\n    label: I18N.MESSAGES_UPDATE_SUCCESS,\n  },\n  {\n    key: ERRORS.CREATED_SUCCESS,\n    label: I18N.MESSAGES_CREATED_SUCCESS,\n  },\n  {\n    key: ERRORS.IMAGE_SIZE,\n    label: I18N.MESSAGES_IMAGE_SIZE,\n  },\n  {\n    key: ERRORS.LOGIN_FAIL,\n    label: I18N.MESSAGES_LOGIN_FAIL,\n  },\n  {\n    key: ERRORS.CREATE_ERROR,\n    label: I18N.MESSAGES_CREATE_ERROR,\n  },\n  {\n    key: ERRORS.EMAIL_EXIST,\n    label: I18N.MESSAGES_EMAIL_EXIST,\n  },\n  {\n    key: ERRORS.INVALID,\n    label: I18N.MESSAGES_INVALID,\n  },\n  {\n    key: ERRORS.NOT_FOUND,\n    label: I18N.MESSAGES_NOT_FOUND,\n  },\n  {\n    key: ERRORS.ERROR,\n    label: I18N.MESSAGES_ERROR,\n  },\n  {\n    key: ERRORS.SELF_DELETE,\n    label: I18N.MESSAGES_SELF_DELETE,\n  },\n  {\n    key: ERRORS.SUPER_ADMIN_DELETE,\n    label: I18N.MESSAGES_SUPER_ADMIN_DELETE,\n  },\n  {\n    key: ERRORS.COMPANY_EXIST,\n    label: I18N.MESSAGES_COMPANY_EXIST,\n  },\n  {\n    key: ERRORS.ORDER_NOT_FOUND,\n    label: I18N.MESSAGES_ORDER_NOT_FOUND,\n  },\n  {\n    key: ERRORS.DRIVER_NOT_FOUND,\n    label: I18N.MESSAGES_DRIVER_NOT_FOUND,\n  },\n  {\n    key: ERRORS.PHONE_EXIST,\n    label: I18N.MESSAGES_PHONE_EXIST,\n  },\n  {\n    key: ERRORS.EXISTED,\n    label: I18N.MESSAGES_EXISTED,\n  },\n  {\n    key: ERRORS.TRUCK_OWNER_NOT_FOUND,\n    label: I18N.MESSAGES_TRUCK_OWNER_NOT_FOUND,\n  },\n  {\n    key: ERRORS.CREATE_ORDER_ERROR,\n    label: I18N.MESSAGES_CREATE_ORDER_ERROR,\n  },\n  {\n    key: ERRORS.NOT_ASSIGNED,\n    label: I18N.MESSAGES_NOT_ASSIGNED,\n  },\n  {\n    key: ERRORS.DELETED_ACCOUNT,\n    label: I18N.MESSAGES_DELETED_ACCOUNT,\n  },\n  {\n    key: ERRORS.KICKED_OUT,\n    label: I18N.MESSAGES_KICKED_OUT,\n  },\n  {\n    key: ERRORS.WRONG_PHONE_NUMBER_FORMAT,\n    label: I18N.MESSAGES_WRONG_PHONE_NUMBER_FORMAT,\n  },\n  {\n    key: ERRORS.PHONE_INPUT_TOO_LONG,\n    label: I18N.MESSAGES_PHONE_INPUT_TOO_LONG,\n  },\n  {\n    key: ERRORS.TAKEN,\n    label: I18N.MESSAGES_TAKEN,\n  },\n  {\n    key: ERRORS.TOKEN_ERROR,\n    label: I18N.MESSAGES_TOKEN_ERROR,\n  },\n  {\n    key: ERRORS.ORDER_PERMISSION,\n    label: I18N.MESSAGES_ORDER_PERMISSION,\n  },\n  {\n    key: ERRORS.LACK_DRIVER_OR_TRUCK,\n    label: I18N.MESSAGES_LACK_DRIVER_OR_TRUCK,\n  },\n  {\n    key: ERRORS.FINDNEWTRUCK_ERROR_STATUS,\n    label: I18N.MESSAGES_FINDNEWTRUCK_ERROR_STATUS,\n  },\n  {\n    key: ERRORS.NOT_VERIFIED,\n    label: I18N.MESSAGES_NOT_VERIFIED,\n  },\n  {\n    key: ERRORS.FOLDER_NOT_EXISTED,\n    label: I18N.MESSAGES_FOLDER_NOT_EXISTED,\n  },\n  {\n    key: ERRORS.COMPANY_NOT_EXISTED,\n    label: I18N.MESSAGES_COMPANY_NOT_EXISTED,\n  },\n  {\n    key: ERRORS.DRIVER_EXISTED,\n    label: I18N.MESSAGES_DRIVER_EXISTED,\n  },\n  {\n    key: ERRORS.CUSTOMER_CANCEL_ORDER,\n    label: I18N.MESSAGES_CUSTOMER_CANCEL_ORDER,\n  },\n  {\n    key: ERRORS.DRIVER_CANCEL_ORDER,\n    label: I18N.MESSAGES_DRIVER_CANCEL_ORDER,\n  },\n  {\n    key: ERRORS.EMAIL_NOT_VERIFY,\n    label: I18N.MESSAGES_EMAIL_NOT_VERIFY,\n  },\n  {\n    key: ERRORS.PHONE_OTP_VERIFY,\n    label: I18N.MESSAGES_PHONE_OTP_VERIFY,\n  },\n  {\n    key: ERRORS.INCORRECT_OTP,\n    label: I18N.MESSAGES_INCORRECT_OTP,\n  },\n  {\n    key: ERRORS.OTP_EXPIRED,\n    label: I18N.MESSAGES_OTP_EXPIRED,\n  },\n  {\n    key: ERRORS.PHONE_NOT_EXIST,\n    label: I18N.MESSAGES_PHONE_NOT_EXIST,\n  },\n  {\n    key: ERRORS.PICKUP_CODE_INCORRECT,\n    label: I18N.MESSAGES_PICKUP_CODE_INCORRECT,\n  },\n  {\n    key: ERRORS.ADMIN_NOT_FOUND,\n    label: I18N.MESSAGES_ADMIN_NOT_FOUND,\n  },\n  {\n    key: ERRORS.CUSTOMER_NOT_FOUND,\n    label: I18N.MESSAGES_CUSTOMER_NOT_FOUND,\n  },\n  {\n    key: ERRORS.EMPLOYEE_NOT_FOUND,\n    label: I18N.MESSAGES_EMPLOYEE_NOT_FOUND,\n  },\n  {\n    key: ERRORS.EMAIL_NOT_FOUND,\n    label: I18N.MESSAGES_EMAIL_NOT_FOUND,\n  },\n  {\n    key: ERRORS.SERVICE_TYPE_OR_ORDER_TYPE,\n    label: I18N.MESSAGES_SERVICE_TYPE_OR_ORDER_TYPE,\n  },\n  {\n    key: ERRORS.DETAIL_REQUIRED,\n    label: I18N.MESSAGES_DETAIL_REQUIRED,\n  },\n  {\n    key: ERRORS.CARGO_TYPE_OR_NAME,\n    label: I18N.MESSAGES_CARGO_TYPE_OR_NAME,\n  },\n  {\n    key: ERRORS.TRUCK_SPECIAL_OR_QUANTITY,\n    label: I18N.MESSAGES_TRUCK_SPECIAL_OR_QUANTITY,\n  },\n  {\n    key: ERRORS.CONTAINER_REQUIRED,\n    label: I18N.MESSAGES_CONTAINER_REQUIRED,\n  },\n  {\n    key: ERRORS.SUPPER_EXIST,\n    label: I18N.MESSAGES_SUPPER_EXIST,\n  },\n];\n","/var/www/text-sum-web/src/modules/lang/components/SwitchLanguages/index.tsx",[],"/var/www/text-sum-web/src/modules/theme/components/Menu/index.tsx",["350","351"],"import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useHistory } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { I18N } from '@/modules/lang/i18n.enum';\nimport { useMediaQuery } from 'react-responsive';\nimport { LogoDto } from '@/libs/dto/Logo.dto';\nimport logoSvg from '@/modules/theme/assets/images/Customer-Logo.png';\nimport { CommonStoreContext } from '@/libs/stores/common.store';\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\nimport { USER_ROUTERS } from '@/modules/router.enum';\nimport { MenuDto } from '../../theme.dto';\nimport { menuUser } from '../../theme.constants';\n\n/*\n * Props of Component\n */\ninterface ComponentProps {\n  style?: React.CSSProperties;\n  className?: string;\n  children?: React.ReactNode;\n  logo?: LogoDto;\n}\n\nconst Menu = (props: ComponentProps) => {\n  const history = useHistory();\n  const authenticationStore = React.useContext(AuthenticationStoreContext);\n  const commonStore = React.useContext(CommonStoreContext);\n  const routers: any = USER_ROUTERS;\n\n  /*\n   * Props of Component\n   */\n  const {\n    style,\n    className,\n    children,\n    logo = {\n      className: '',\n      url: logoSvg,\n      alt: 'Logo',\n    },\n  } = props;\n\n  /*\n   * Translation\n   */\n  const { t } = useTranslation();\n  const { ADMIN_MENU_LOG_OUT } = I18N;\n\n  /*\n   * Action of logout link\n   * @params: void\n   * @return: void\n   */\n  const handleLogout = () => {\n    authenticationStore.logout(history, routers.LOGIN);\n  };\n\n  /*\n   * Setting Menu Responsive\n   */\n  const [showMenu, setShowMenu] = React.useState<boolean>(false);\n\n  const handleMediaQueryChange = (matches: boolean) => {\n    if (matches === false) setShowMenu(matches);\n  };\n\n  const isMobile = useMediaQuery(\n    {\n      query: '(max-width: 991px)',\n    },\n    undefined,\n    handleMediaQueryChange\n  );\n\n  const changeShowHideMenu = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handleToUrl = (url: string) => {\n    history.push(url);\n    commonStore.setActiveMenu(url);\n  };\n\n  return (\n    <>\n      <div className=\"menu-wrapper\">\n        {isMobile && (\n          <div\n            className={`menu-icon ${showMenu ? 'close' : ''}`}\n            onClick={() => changeShowHideMenu()}\n          >\n            {!showMenu && <i className=\"ico ico-menu\"></i>}\n            {showMenu && <i className=\"ico ico-delete\"></i>}\n          </div>\n        )}\n        <div\n          className={`flex-column main-menu ${className ? className : ''} ${\n            isMobile ? 'menu-mobile' : 'menu-desktop'\n          } ${showMenu ? 'show' : ''}`}\n        >\n          {logo && (\n            <div\n              onClick={() => {\n                history.push(USER_ROUTERS.SETUP);\n              }}\n              className=\"logo-menu\"\n            >\n              <img\n                className={logo.className ? logo.className : ''}\n                src={logoSvg}\n                alt={logo.alt ? logo.alt : 'Logo'}\n              />\n            </div>\n          )}\n          <Nav className=\"menu-items\" style={style}>\n            {menuUser.map((item: MenuDto, index) => (\n              <Nav.Link\n                className={`item ${\n                  commonStore.activeMenu === item.url ? 'active' : ''\n                }`}\n                eventKey={item.url}\n                onClick={() => handleToUrl(item.url)}\n                key={`menu-${index}`}\n              >\n                {item.icon && <i className={`ico ${item.icon}`}></i>}\n                <span>{t(item.label)}</span>\n              </Nav.Link>\n            ))}\n            <Nav.Link className=\"item\" onClick={handleLogout}>\n              <i className=\"ico ico-logout\"></i>\n              <span>{t(ADMIN_MENU_LOG_OUT)}</span>\n            </Nav.Link>\n          </Nav>\n          {children}\n          <div className=\"copyright\"></div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default observer(Menu);\n","/var/www/text-sum-web/src/modules/theme/components/TopMenu/index.tsx",["352"],"import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useHistory } from 'react-router-dom';\n\nimport { useMediaQuery } from 'react-responsive';\nimport { LogoDto } from '@/libs/dto/Logo.dto';\nimport logoSvg from '@/modules/theme/assets/images/logo.svg';\nimport SwitchLanguages from '@/modules/lang/components/SwitchLanguages';\nimport NotificationSummary from '@/modules/notification/components/Summary';\nimport AccountSummary from '@/modules/account/components/AccountSummary';\nimport { USER_ROUTERS } from '@/modules/router.enum';\n/*\n * Props of Component\n */\ninterface ComponentProps {\n  className?: string;\n  logo?: LogoDto;\n}\n\nconst TopMenu = (props: ComponentProps) => {\n  const history = useHistory();\n\n  /*\n   * Props of Component\n   */\n  const {\n    className,\n    logo = {\n      className: '',\n      url: logoSvg,\n      alt: 'Logo',\n    },\n  } = props;\n\n  /*\n   * Setting logo responsive\n   */\n  const isMobile = useMediaQuery({\n    query: '(max-width: 991px)',\n  });\n\n  return (\n    <>\n      <div className={`top-menu ${className ? className : ''}`}>\n        {isMobile && (\n          <div\n            onClick={() => {\n              history.push(USER_ROUTERS.SETUP);\n            }}\n            className=\"logo-menu\"\n          >\n            <img\n              className={logo.className ? logo.className : ''}\n              src={logo.url ? logo.url : ''}\n              alt={logo.alt ? logo.alt : 'Logo'}\n            />\n          </div>\n        )}\n        <NotificationSummary />\n        <AccountSummary />\n        <SwitchLanguages />\n      </div>\n    </>\n  );\n};\n\nexport default observer(TopMenu);\n","/var/www/text-sum-web/src/libs/components/PageTitle/index.tsx",[],"/var/www/text-sum-web/src/modules/account/components/ForgotForm/index.tsx",[],"/var/www/text-sum-web/src/modules/account/components/ResetForm/index.tsx",[],"/var/www/text-sum-web/src/modules/account/components/RegisterForm/index.tsx",[],"/var/www/text-sum-web/src/modules/user/components/AccountForm/index.tsx",[],"/var/www/text-sum-web/src/modules/account/components/ThankYouContent/index.tsx",[],"/var/www/text-sum-web/src/modules/message/message.enum.ts",[],"/var/www/text-sum-web/src/modules/lang/lang.constants.ts",["353"],"import { LanguageDto } from '@/modules/lang/lang.dto';\nimport { LANGUAGES } from '@/modules/lang/lang.enum';\n\nexport const languages: LanguageDto[] = [\n  {\n    key: LANGUAGES.EN,\n    label: 'English',\n    shortLabel: 'EN',\n  },\n  {\n    key: LANGUAGES.VI,\n    label: 'Tiếng Việt',\n    shortLabel: 'VN',\n  },\n];\n","/var/www/text-sum-web/src/modules/theme/theme.constants.ts",["354"],"import { MenuDto } from '@/modules/theme/theme.dto';\nimport { I18N } from '../lang/i18n.enum';\nimport { USER_ROUTERS } from '../router.enum';\n\nexport const menuUser: MenuDto[] = [\n  {\n    url: USER_ROUTERS.SETUP,\n    label: I18N.MENU_ACCOUNT_SETUP,\n    icon: 'ico ico-accounts',\n  },\n];\n","/var/www/text-sum-web/src/libs/constants/rules.constants.ts",[],"/var/www/text-sum-web/src/libs/enums/button.enum.ts",[],"/var/www/text-sum-web/src/modules/lang/lang.enum.ts",[],"/var/www/text-sum-web/src/modules/account/components/AccountSummary/index.tsx",["355"],"import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { I18N } from '@/modules/lang/i18n.enum';\n\nimport { normalizeName } from '@/libs/utils/normalize.ulti';\nimport tadaLogo from '@/modules/theme/assets/images/tada-logo.svg';\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\nimport { USER_ROUTERS } from '@/modules/router.enum';\nimport { UserStoreContext } from '@/modules/user/user.store';\n\n/*\n * Props of Component\n */\ninterface ComponentProps {\n  className?: string;\n}\n\nconst AccountSummary = (props: ComponentProps) => {\n  const authStore = React.useContext(AuthenticationStoreContext);\n  const userStore = React.useContext(UserStoreContext);\n\n  const history = useHistory();\n\n  /*\n   * Props of Component\n   */\n  const { className } = props;\n\n  /*\n   * Translation\n   */\n  const { t } = useTranslation();\n  const { TOPMENU_WELCOME } = I18N;\n\n  return (\n    <>\n      <div className={`item box-info ${className ? className : ''}`}>\n        <span\n          onClick={() => {\n            history.push(USER_ROUTERS.SETUP);\n          }}\n        >\n          <>\n            {normalizeName(\n              authStore.loggedUser?.firstName ?? '',\n              authStore.loggedUser?.lastName ?? '',\n              t(TOPMENU_WELCOME)\n            )}\n          </>\n        </span>\n        <div\n          className=\"info-avatar\"\n          onClick={() => {\n            history.push(USER_ROUTERS.SETUP);\n          }}\n        >\n          <img\n            src={\n              authStore.loggedUser?.avatarUrl\n                ? authStore.loggedUser?.avatarUrl\n                : tadaLogo\n            }\n            alt=\"Logo\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default observer(AccountSummary);\n","/var/www/text-sum-web/src/libs/components/CurrentDate/index.tsx",[],"/var/www/text-sum-web/src/modules/notification/components/Summary/index.tsx",[],"/var/www/text-sum-web/src/libs/utils/normalize.ulti.ts",[],"/var/www/text-sum-web/src/modules/notification/notification.store.ts",[],"/var/www/text-sum-web/src/modules/notification/notification.constants.ts",["356"],"import { NewNotificationDto } from '@/modules/notification/notification.store';\n\nexport const newNotificationFormInit: NewNotificationDto = {\n  title: '',\n  body: '',\n  sendToCustomer: false,\n  sendToTruckOwner: false,\n};\n\nexport const notificationType = [\n  {\n    key: '',\n    label: '',\n  },\n];\n\nexport const getNotificationType = (t: any, key: any) => {\n  return t(notificationType.find((item) => item.key === key)?.label);\n};\n",["357","358"],"/var/www/text-sum-web/src/modules/notification/notification.service.ts",["359","360"],"import http from '@/libs/services';\nimport { prepareGetQuery } from '@/libs/utils/routes.util';\nimport {\n  NewNotificationDto,\n  NotificationListDto,\n} from '@/modules/notification/notification.store';\n\nclass NotificationService {\n  prefix = 'api/notification';\n  public async getList(filter: Record<string, any>) {\n    const result = await http.get(\n      `${this.prefix}${prepareGetQuery({ ...filter })}`\n    );\n    return result?.data?.result;\n  }\n\n  public async getNotifications(criteria: NotificationListDto) {\n    return await http.get(\n      `${this.prefix}/all${prepareGetQuery({ ...criteria })}`\n    );\n  }\n\n  public async setRead(id: number) {\n    const result = await http.put(`${this.prefix}/read/${id}`);\n    return result.data.result;\n  }\n\n  public async addNotification(model: NewNotificationDto) {\n    const result = await http.post(`${this.prefix}`, model);\n    return result.data?.result;\n  }\n}\n\nexport default new NotificationService();\n",{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","severity":1,"message":"366","line":5,"column":10,"nodeType":"367","messageId":"368","endLine":5,"endColumn":29},{"ruleId":"365","severity":1,"message":"369","line":7,"column":10,"nodeType":"367","messageId":"368","endLine":7,"endColumn":30},{"ruleId":"365","severity":1,"message":"370","line":8,"column":10,"nodeType":"367","messageId":"368","endLine":8,"endColumn":20},{"ruleId":"365","severity":1,"message":"371","line":21,"column":9,"nodeType":"367","messageId":"368","endLine":21,"endColumn":18},{"ruleId":"365","severity":1,"message":"372","line":22,"column":9,"nodeType":"367","messageId":"368","endLine":22,"endColumn":16},{"ruleId":"365","severity":1,"message":"373","line":10,"column":10,"nodeType":"367","messageId":"368","endLine":10,"endColumn":18},{"ruleId":"365","severity":1,"message":"374","line":4,"column":10,"nodeType":"367","messageId":"368","endLine":4,"endColumn":14},{"ruleId":"365","severity":1,"message":"375","line":8,"column":10,"nodeType":"367","messageId":"368","endLine":8,"endColumn":26},{"ruleId":"365","severity":1,"message":"376","line":5,"column":10,"nodeType":"367","messageId":"368","endLine":5,"endColumn":23},{"ruleId":"365","severity":1,"message":"377","line":23,"column":11,"nodeType":"367","messageId":"368","endLine":23,"endColumn":33},{"ruleId":"365","severity":1,"message":"378","line":14,"column":9,"nodeType":"367","messageId":"368","endLine":14,"endColumn":18},{"ruleId":"365","severity":1,"message":"377","line":25,"column":5,"nodeType":"367","messageId":"368","endLine":25,"endColumn":27},{"ruleId":"365","severity":1,"message":"373","line":4,"column":10,"nodeType":"367","messageId":"368","endLine":4,"endColumn":18},{"ruleId":"365","severity":1,"message":"379","line":5,"column":3,"nodeType":"367","messageId":"368","endLine":5,"endColumn":17},{"ruleId":"365","severity":1,"message":"380","line":6,"column":3,"nodeType":"367","messageId":"368","endLine":6,"endColumn":23},{"ruleId":"365","severity":1,"message":"381","line":7,"column":3,"nodeType":"367","messageId":"368","endLine":7,"endColumn":20},{"ruleId":"365","severity":1,"message":"373","line":2,"column":10,"nodeType":"367","messageId":"368","endLine":2,"endColumn":18},{"ruleId":"365","severity":1,"message":"382","line":5,"column":3,"nodeType":"367","messageId":"368","endLine":5,"endColumn":15},{"ruleId":"365","severity":1,"message":"376","line":6,"column":3,"nodeType":"367","messageId":"368","endLine":6,"endColumn":16},{"ruleId":"365","severity":1,"message":"375","line":7,"column":3,"nodeType":"367","messageId":"368","endLine":7,"endColumn":19},{"ruleId":"365","severity":1,"message":"383","line":8,"column":3,"nodeType":"367","messageId":"368","endLine":8,"endColumn":17},{"ruleId":"365","severity":1,"message":"379","line":4,"column":3,"nodeType":"367","messageId":"368","endLine":4,"endColumn":17},{"ruleId":"365","severity":1,"message":"380","line":5,"column":3,"nodeType":"367","messageId":"368","endLine":5,"endColumn":23},{"ruleId":"365","severity":1,"message":"381","line":6,"column":3,"nodeType":"367","messageId":"368","endLine":6,"endColumn":20},{"ruleId":"365","severity":1,"message":"380","line":2,"column":10,"nodeType":"367","messageId":"368","endLine":2,"endColumn":30},{"ruleId":"365","severity":1,"message":"376","line":4,"column":3,"nodeType":"367","messageId":"368","endLine":4,"endColumn":16},{"ruleId":"365","severity":1,"message":"375","line":5,"column":3,"nodeType":"367","messageId":"368","endLine":5,"endColumn":19},{"ruleId":"365","severity":1,"message":"384","line":6,"column":3,"nodeType":"367","messageId":"368","endLine":6,"endColumn":19},{"ruleId":"365","severity":1,"message":"383","line":7,"column":3,"nodeType":"367","messageId":"368","endLine":7,"endColumn":17},{"ruleId":"365","severity":1,"message":"385","line":3,"column":8,"nodeType":"367","messageId":"368","endLine":3,"endColumn":12},{"ruleId":"365","severity":1,"message":"386","line":37,"column":10,"nodeType":"367","messageId":"368","endLine":37,"endColumn":16},{"ruleId":"365","severity":1,"message":"387","line":1,"column":10,"nodeType":"367","messageId":"368","endLine":1,"endColumn":18},{"ruleId":"365","severity":1,"message":"388","line":8,"column":10,"nodeType":"367","messageId":"368","endLine":8,"endColumn":17},{"ruleId":"365","severity":1,"message":"389","line":13,"column":10,"nodeType":"367","messageId":"368","endLine":13,"endColumn":17},{"ruleId":"365","severity":1,"message":"388","line":6,"column":10,"nodeType":"367","messageId":"368","endLine":6,"endColumn":17},{"ruleId":"365","severity":1,"message":"390","line":1,"column":10,"nodeType":"367","messageId":"368","endLine":1,"endColumn":21},{"ruleId":"365","severity":1,"message":"389","line":1,"column":10,"nodeType":"367","messageId":"368","endLine":1,"endColumn":17},{"ruleId":"365","severity":1,"message":"378","line":22,"column":9,"nodeType":"367","messageId":"368","endLine":22,"endColumn":18},{"ruleId":"365","severity":1,"message":"391","line":1,"column":10,"nodeType":"367","messageId":"368","endLine":1,"endColumn":28},{"ruleId":"361","replacedBy":"392"},{"ruleId":"363","replacedBy":"393"},{"ruleId":"365","severity":1,"message":"391","line":4,"column":3,"nodeType":"367","messageId":"368","endLine":4,"endColumn":21},{"ruleId":"365","severity":1,"message":"394","line":5,"column":3,"nodeType":"367","messageId":"368","endLine":5,"endColumn":22},"no-native-reassign",["395"],"no-negated-in-lhs",["396"],"@typescript-eslint/no-unused-vars","'retrieveFromStorage' is defined but never used.","Identifier","unusedVar","'LanguageStoreContext' is defined but never used.","'userRoutes' is defined but never used.","'authStore' is assigned a value but never used.","'history' is assigned a value but never used.","'LoginDto' is defined but never used.","'I18N' is defined but never used.","'ResetPasswordDto' is defined but never used.","'CreateUserDto' is defined but never used.","'ONEPAGE_CUSTOMER_TITLE' is assigned a value but never used.","'userStore' is assigned a value but never used.","'UserRequestDto' is defined but never used.","'UpdateUserRequestDto' is defined but never used.","'UserUpdateFormDto' is defined but never used.","'UserTableDto' is defined but never used.","'SetPasswordDto' is defined but never used.","'UpdateAccountDto' is defined but never used.","'logo' is defined but never used.","'avatar' is assigned a value but never used.","'ErrorDto' is defined but never used.","'LogoDto' is defined but never used.","'MenuDto' is defined but never used.","'LanguageDto' is defined but never used.","'NewNotificationDto' is defined but never used.",["395"],["396"],"'NotificationListDto' is defined but never used.","no-global-assign","no-unsafe-negation"]