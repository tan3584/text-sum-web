[{"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\index.tsx":"1","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\i18n.ts":"2","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\App.tsx":"3","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\serviceWorker.ts":"4","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\storage.util.ts":"5","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\stores\\index.ts":"6","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\stores\\firebase.store.ts":"7","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\firebase.util.ts":"8","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\constants\\local-storage-key.constants.ts":"9","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\components\\Loading\\index.tsx":"10","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\layout\\theme.tsx":"11","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\stores\\common.store.ts":"12","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\routers\\index.tsx":"13","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\routes.util.ts":"14","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\layout\\index.tsx":"15","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\routes\\front\\index.tsx":"16","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\router.enum.ts":"17","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\i18n.enum.ts":"18","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\pages\\create\\index.tsx":"19","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\no-route\\page\\frontend\\PageNotFound\\index.tsx":"20","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\Login\\index.tsx":"21","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\Create\\index.tsx":"22","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\ThankYou\\index.tsx":"23","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\ForgotPassword\\index.tsx":"24","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\Setup\\index.tsx":"25","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\ResetPassword\\index.tsx":"26","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\VerifiedEmail\\index.tsx":"27","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\authentication.store.ts":"28","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\user.enum.ts":"29","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\user.store.ts":"30","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\account.store.ts":"31","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\lang.store.tsx":"32","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\LoginForm\\index.tsx":"33","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\theme\\components\\Wrapper\\index.tsx":"34","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\theme\\components\\OnePage\\index.tsx":"35","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\authenticate.service.ts":"36","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\user.constants.ts":"37","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\user.service.ts":"38","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\account.service.ts":"39","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\ThankYouContent\\index.tsx":"40","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\RegisterForm\\index.tsx":"41","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\ForgotForm\\index.tsx":"42","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\MyAccount\\index.tsx":"43","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\ResetForm\\index.tsx":"44","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\apis.util.ts":"45","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\referenceType.enum.ts":"46","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\LoginForm\\index.tsx":"47","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\theme\\components\\TopMenu\\index.tsx":"48","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\components\\PageTitle\\index.tsx":"49","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\services\\index.ts":"50","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\components\\SwitchLanguages\\index.tsx":"51","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\RegisterForm\\index.tsx":"52","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\ForgotForm\\index.tsx":"53","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\ThankYouContent\\index.tsx":"54","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\ResetForm\\index.tsx":"55","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\AccountForm\\index.tsx":"56","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\message\\message.constants.ts":"57","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\lang.constants.ts":"58","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\constants\\rules.constants.ts":"59","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\enums\\button.enum.ts":"60","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\message\\message.enum.ts":"61","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\AccountSummary\\index.tsx":"62","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\components\\CurrentDate\\index.tsx":"63","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\lang.enum.ts":"64","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\notification\\components\\Summary\\index.tsx":"65","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\normalize.ulti.ts":"66","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\notification\\notification.store.ts":"67","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\notification\\notification.service.ts":"68","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\notification\\notification.constants.ts":"69","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\routers\\routes.tsx":"70","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\page\\Home\\index.tsx":"71","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\pages\\newlist\\index.tsx":"72","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\article.store.ts":"73","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\theme.enum.ts":"74","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\article.service.ts":"75","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\components\\ArticleForm\\index.tsx":"76","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\components\\NewArticlelist\\index.tsx":"77","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\components\\ArticlePreview\\index.tsx":"78","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\helpers\\helpers.js":"79"},{"size":1400,"mtime":1607640543210,"results":"80","hashOfConfig":"81"},{"size":659,"mtime":1607640546107,"results":"82","hashOfConfig":"81"},{"size":1903,"mtime":1609129489446,"results":"83","hashOfConfig":"81"},{"size":5436,"mtime":1608351824477,"results":"84","hashOfConfig":"81"},{"size":1251,"mtime":1607640450910,"results":"85","hashOfConfig":"81"},{"size":230,"mtime":1608351824466,"results":"86","hashOfConfig":"81"},{"size":278,"mtime":1607640450822,"results":"87","hashOfConfig":"81"},{"size":623,"mtime":1607640450877,"results":"88","hashOfConfig":"81"},{"size":72,"mtime":1607640450719,"results":"89","hashOfConfig":"81"},{"size":329,"mtime":1607644215613,"results":"90","hashOfConfig":"81"},{"size":135,"mtime":1607645192616,"results":"91","hashOfConfig":"81"},{"size":844,"mtime":1607640450816,"results":"92","hashOfConfig":"81"},{"size":2471,"mtime":1609129489460,"results":"93","hashOfConfig":"81"},{"size":2491,"mtime":1607640450902,"results":"94","hashOfConfig":"81"},{"size":621,"mtime":1607642863782,"results":"95","hashOfConfig":"81"},{"size":3002,"mtime":1609129489455,"results":"96","hashOfConfig":"81"},{"size":764,"mtime":1609129489454,"results":"97","hashOfConfig":"81"},{"size":26576,"mtime":1607641140788,"results":"98","hashOfConfig":"81"},{"size":1111,"mtime":1609129489453,"results":"99","hashOfConfig":"81"},{"size":275,"mtime":1607642216596,"results":"100","hashOfConfig":"81"},{"size":2625,"mtime":1607643853312,"results":"101","hashOfConfig":"81"},{"size":2022,"mtime":1607874530350,"results":"102","hashOfConfig":"81"},{"size":2181,"mtime":1607874530353,"results":"103","hashOfConfig":"81"},{"size":1750,"mtime":1607874530351,"results":"104","hashOfConfig":"81"},{"size":2181,"mtime":1607874530352,"results":"105","hashOfConfig":"81"},{"size":1912,"mtime":1607874530351,"results":"106","hashOfConfig":"81"},{"size":1678,"mtime":1607874530354,"results":"107","hashOfConfig":"81"},{"size":2248,"mtime":1607643905922,"results":"108","hashOfConfig":"81"},{"size":434,"mtime":1607874530356,"results":"109","hashOfConfig":"81"},{"size":5271,"mtime":1607874530357,"results":"110","hashOfConfig":"81"},{"size":2124,"mtime":1607645924425,"results":"111","hashOfConfig":"81"},{"size":399,"mtime":1607641140794,"results":"112","hashOfConfig":"81"},{"size":569,"mtime":1607874530345,"results":"113","hashOfConfig":"81"},{"size":1318,"mtime":1608351824475,"results":"114","hashOfConfig":"81"},{"size":1070,"mtime":1607874530339,"results":"115","hashOfConfig":"81"},{"size":1309,"mtime":1607670206504,"results":"116","hashOfConfig":"81"},{"size":3242,"mtime":1607874530355,"results":"117","hashOfConfig":"81"},{"size":3107,"mtime":1609129489456,"results":"118","hashOfConfig":"81"},{"size":1956,"mtime":1607645956674,"results":"119","hashOfConfig":"81"},{"size":606,"mtime":1607874530349,"results":"120","hashOfConfig":"81"},{"size":584,"mtime":1607874530348,"results":"121","hashOfConfig":"81"},{"size":528,"mtime":1607874530343,"results":"122","hashOfConfig":"81"},{"size":3269,"mtime":1607874530347,"results":"123","hashOfConfig":"81"},{"size":518,"mtime":1607874530349,"results":"124","hashOfConfig":"81"},{"size":619,"mtime":1607640450847,"results":"125","hashOfConfig":"81"},{"size":54,"mtime":1607874530303,"results":"126","hashOfConfig":"81"},{"size":5005,"mtime":1607874530398,"results":"127","hashOfConfig":"81"},{"size":1696,"mtime":1607874530340,"results":"128","hashOfConfig":"81"},{"size":1218,"mtime":1607640450688,"results":"129","hashOfConfig":"81"},{"size":2675,"mtime":1609129489448,"results":"130","hashOfConfig":"81"},{"size":2306,"mtime":1609129489454,"results":"131","hashOfConfig":"81"},{"size":8185,"mtime":1607874530397,"results":"132","hashOfConfig":"81"},{"size":3500,"mtime":1607874530400,"results":"133","hashOfConfig":"81"},{"size":1442,"mtime":1607874530394,"results":"134","hashOfConfig":"81"},{"size":5426,"mtime":1607874530396,"results":"135","hashOfConfig":"81"},{"size":8103,"mtime":1607874530342,"results":"136","hashOfConfig":"81"},{"size":5054,"mtime":1607644968697,"results":"137","hashOfConfig":"81"},{"size":329,"mtime":1607874530305,"results":"138","hashOfConfig":"81"},{"size":241,"mtime":1607640450731,"results":"139","hashOfConfig":"81"},{"size":192,"mtime":1607640450788,"results":"140","hashOfConfig":"81"},{"size":2440,"mtime":1607644968701,"results":"141","hashOfConfig":"81"},{"size":1924,"mtime":1607874530295,"results":"142","hashOfConfig":"81"},{"size":1128,"mtime":1607640450605,"results":"143","hashOfConfig":"81"},{"size":112,"mtime":1607641140793,"results":"144","hashOfConfig":"81"},{"size":3468,"mtime":1607874530307,"results":"145","hashOfConfig":"81"},{"size":826,"mtime":1607640450893,"results":"146","hashOfConfig":"81"},{"size":2984,"mtime":1607874530308,"results":"147","hashOfConfig":"81"},{"size":991,"mtime":1607874530308,"results":"148","hashOfConfig":"81"},{"size":449,"mtime":1607874530307,"results":"149","hashOfConfig":"81"},{"size":371,"mtime":1609129489460,"results":"150","hashOfConfig":"81"},{"size":197,"mtime":1607640899923,"results":"151","hashOfConfig":"81"},{"size":969,"mtime":1609129489453,"results":"152","hashOfConfig":"81"},{"size":1038,"mtime":1609129489449,"results":"153","hashOfConfig":"81"},{"size":172,"mtime":1609129489459,"results":"154","hashOfConfig":"81"},{"size":721,"mtime":1609129489449,"results":"155","hashOfConfig":"81"},{"size":3616,"mtime":1609129489450,"results":"156","hashOfConfig":"81"},{"size":1607,"mtime":1609129489452,"results":"157","hashOfConfig":"81"},{"size":1634,"mtime":1609129489451,"results":"158","hashOfConfig":"81"},{"size":1119,"mtime":1609129489447,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"4ztfsw",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"162"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"162"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"162"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"162"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"162"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"162"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"162"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"162"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"162"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"162"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"162"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"162"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"162"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"162"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"162"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"162"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"162"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"177"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"162"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\index.tsx",[],["339","340"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\i18n.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\App.tsx",["341","342","343","344"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\serviceWorker.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\storage.util.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\stores\\index.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\stores\\firebase.store.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\firebase.util.ts",[],["345","346"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\constants\\local-storage-key.constants.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\components\\Loading\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\layout\\theme.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\stores\\common.store.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\routers\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\routes.util.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\layout\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\routes\\front\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\router.enum.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\i18n.enum.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\pages\\create\\index.tsx",["347","348"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\no-route\\page\\frontend\\PageNotFound\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\Login\\index.tsx",["349"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n// import { useTranslation } from 'react-i18next';\r\n// import { I18N } from '@/modules/lang/i18n.enum';\r\nimport { useHistory } from 'react-router-dom';\r\n// import { CustomerStoreContext } from '@/modules/customer/customer.stote';\r\n// import { LoginDto } from '@/modules/account/account.dto';\r\nimport OnePage from '@/modules/theme/components/OnePage';\r\nimport UserLoginForm from '@/modules/user/components/LoginForm/index';\r\nimport { LoginDto } from '@/modules/account.dto';\r\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\r\nimport { USER_ROUTERS } from '@/modules/router.enum';\r\n\r\nconst LoginCustomerPage = () => {\r\n  const history = useHistory();\r\n  const authenticationStore = React.useContext(AuthenticationStoreContext);\r\n  // const customerStore = React.useContext(CustomerStoreContext);\r\n\r\n  /*\r\n   * Translation\r\n   */\r\n  // const { t } = useTranslation();\r\n  // const { ONEPAGE_CUSTOMER_TITLE } = I18N;\r\n\r\n  /*\r\n   * Action of login button\r\n   * @params: void\r\n   * @return: void\r\n   */\r\n  const handleLogin = (values: any) => {\r\n    const loginFormValue: LoginDto = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    authenticationStore.setLoginFormValue(loginFormValue);\r\n    authenticationStore.login(history, USER_ROUTERS.SETUP);\r\n  };\r\n\r\n  /*\r\n   * Action of forgot password link\r\n   * @params: void\r\n   * @return: void\r\n   */\r\n  const handleForgotPassword = () => {\r\n    history.push(USER_ROUTERS.FORGOT_PASSWORD);\r\n  };\r\n\r\n  // const [userEmail, setUserEmail] = React.useState('');\r\n\r\n  /*\r\n   * Action of Sign up button\r\n   * @params: void\r\n   * @return: void\r\n   */\r\n  const handleSignUp = () => {\r\n    history.push(USER_ROUTERS.CREATE);\r\n  };\r\n\r\n  // const [initialValues, setInitValues] = React.useState<any>({\r\n  //   email: authenticationStore?.tmpUser?.email ?? '',\r\n  //   password: '',\r\n  // });\r\n\r\n  // React.useEffect(() => {\r\n  //   if (authenticationStore.tmpUser) {\r\n  //     setUserEmail(authenticationStore.tmpUser.email);\r\n  //     setInitValues({\r\n  //       email: authenticationStore?.tmpUser?.email ?? '',\r\n  //       password: '',\r\n  //     });\r\n  //     authenticationStore.clearTmpUser();\r\n  //   }\r\n  // }, [authenticationStore, authenticationStore.tmpUser]);\r\n\r\n  return (\r\n    <>\r\n      <OnePage title={''}>\r\n        <UserLoginForm\r\n          handleLogin={handleLogin}\r\n          handleForgotPassword={handleForgotPassword}\r\n          handleSignUp={handleSignUp}\r\n        />\r\n      </OnePage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(LoginCustomerPage);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\Create\\index.tsx",["350","351"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { I18N } from '@/modules/lang/i18n.enum';\r\nimport { CreateUserDto } from '@/modules/account.dto';\r\nimport { AccountStoreContext } from '@/modules/account/account.store';\r\nimport { LanguageStoreContext } from '@/modules/lang/lang.store';\r\nimport OnePage from '@/modules/theme/components/OnePage';\r\nimport { THANKYOU_ACTION } from '@/modules/user/user.enum';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserRegisterForm from '@/modules/user/components/RegisterForm';\r\nimport { USER_ACTION_ROUTERS } from '@/modules/router.enum';\r\n\r\nconst CreateUserPage = () => {\r\n  const accountStore = React.useContext(AccountStoreContext);\r\n  const history = useHistory();\r\n  const languageStore = React.useContext(LanguageStoreContext);\r\n\r\n  /*\r\n   * Translation\r\n   */\r\n  const { t } = useTranslation();\r\n  const { ONEPAGE_CUSTOMER_TITLE } = I18N;\r\n\r\n  /*\r\n   * Setting required fields of register form\r\n   * @params: void\r\n   * @return: json\r\n   */\r\n  const requiredFields = {\r\n    email: true,\r\n    password: true,\r\n    confirmPassword: true,\r\n    phone: false,\r\n  };\r\n\r\n  /*\r\n   * Action of Sign up button\r\n   * @params: void\r\n   * @return: void\r\n   */\r\n  const handleSignUp = async (values: any) => {\r\n    const createUserData: CreateUserDto = {\r\n      email: values.email.trim(),\r\n      password: values.password,\r\n      phoneNumber: values.phone,\r\n    };\r\n\r\n    accountStore.setCreateUserForm(createUserData);\r\n    const result = await accountStore.register(languageStore.activeLanguage);\r\n    if (result) {\r\n      accountStore.resetCreateUserForm();\r\n      history.push(USER_ACTION_ROUTERS.THANKYOU + THANKYOU_ACTION.REGISTER);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OnePage title={t('')}>\r\n        <UserRegisterForm\r\n          handleRegister={handleSignUp}\r\n          required={requiredFields}\r\n        />\r\n      </OnePage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(CreateUserPage);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\ThankYou\\index.tsx",["352"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { I18N } from '@/modules/lang/i18n.enum';\r\nimport IconThankTadaTruck from '@/libs/assets/images/icon-thank-tadatruck.png';\r\nimport { USER_ROUTERS } from '@/modules/router.enum';\r\nimport UserThankYouContent from '@/modules/user/components/ThankYouContent';\r\nimport OnePage from '@/modules/theme/components/OnePage';\r\n\r\nconst ThankYouCustomerPage = () => {\r\n  const history = useHistory();\r\n\r\n  /*\r\n   * Getting parameter from the route\r\n   */\r\n  const params: any = useParams();\r\n  const { action } = params;\r\n\r\n  /*\r\n   * Translation\r\n   */\r\n  const { t } = useTranslation();\r\n  const {\r\n    ONEPAGE_CUSTOMER_TITLE,\r\n    ACCOUNT_THANKYOU,\r\n    ACCOUNT_THANKYOU_CREATED,\r\n    ACCOUNT_THANKYOU_CREATEDNOTE,\r\n    ACCOUNT_THANKYOU_RESETPW,\r\n    ACCOUNT_THANKYOU_RESETPWNOTE,\r\n    BUTTONS_LOGIN,\r\n  } = I18N;\r\n\r\n  React.useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      history.push(USER_ROUTERS.LOGIN);\r\n    }, 10000);\r\n    return () => clearTimeout(timeout);\r\n  }, [history]);\r\n\r\n  return (\r\n    <>\r\n      <OnePage className=\"thank-you-page\" title={t('')}>\r\n        {action === 'register' && (\r\n          <UserThankYouContent\r\n            title={t(ACCOUNT_THANKYOU)}\r\n            subTitle={t(ACCOUNT_THANKYOU_CREATED)}\r\n            iconSuccess={IconThankTadaTruck}\r\n            btnText={t(BUTTONS_LOGIN)}\r\n            handleBtn={() => history.push(USER_ROUTERS.LOGIN)}\r\n          >\r\n            {t(ACCOUNT_THANKYOU_CREATEDNOTE)}\r\n          </UserThankYouContent>\r\n        )}\r\n        {action === 'resetpassword' && (\r\n          <UserThankYouContent\r\n            title={t(ACCOUNT_THANKYOU)}\r\n            subTitle={t(ACCOUNT_THANKYOU_RESETPW)}\r\n            iconSuccess={IconThankTadaTruck}\r\n            btnText={t(BUTTONS_LOGIN)}\r\n            handleBtn={() => history.push(USER_ROUTERS.LOGIN)}\r\n          >\r\n            {t(ACCOUNT_THANKYOU_RESETPWNOTE)}\r\n          </UserThankYouContent>\r\n        )}\r\n      </OnePage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ThankYouCustomerPage);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\ForgotPassword\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\Setup\\index.tsx",["353"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n// import { toast } from 'react-toastify';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { I18N } from '@/modules/lang/i18n.enum';\r\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\r\nimport { UserStoreContext } from '@/modules/user/user.store';\r\nimport WrapperTheme from '@/modules/theme/components/Wrapper';\r\nimport UserMyAccount from '@/modules/user/components/MyAccount';\r\n\r\nconst SetupUserPage = () => {\r\n  const authStore = React.useContext(AuthenticationStoreContext);\r\n  const userStore = React.useContext(UserStoreContext);\r\n\r\n  /*\r\n   * Translation\r\n   */\r\n  const { t } = useTranslation();\r\n  const { MENU_ACCOUNT_SETUP } = I18N;\r\n\r\n  // -----------------------------\r\n  // Account Section\r\n  // -----------------------------\r\n  const [companyType, setCompanyType] = React.useState(false);\r\n\r\n  const handleChangeType = async (value: boolean) => {\r\n    setCompanyType(value);\r\n  };\r\n\r\n  // const uploadFiles = async () => {};\r\n\r\n  // const handleSubmit = async (values: any) => {};\r\n\r\n  // const handleUploadIcon = (event: any) => {\r\n  //   const file = event.target.files[0];\r\n  //   setCompanyIco({ file: file });\r\n  // };\r\n\r\n  // React.useEffect(() => {\r\n\r\n  //   if (authStore.loggedUser?.accountRole !== 0) {\r\n  //     userStore.getCompany();\r\n  //   }\r\n  // // }, [userStore, authStore.loggedUser]);\r\n\r\n  // React.useEffect(() => {\r\n  //   setCompanyType(\r\n  //     typeof authStore.loggedUser?.companyId === 'number' ? true : false\r\n  //   );\r\n  //   if (typeof authStore.loggedUser?.companyId === 'number') {\r\n  //     setCompanyActionMode(ACTION_MODE.EDIT);\r\n  //   }\r\n  // }, [userStore.company, authStore.loggedUser]);\r\n\r\n  React.useEffect(() => {}, [authStore.loggedUser]);\r\n\r\n  return (\r\n    <>\r\n      <WrapperTheme pageTitle={t(MENU_ACCOUNT_SETUP)}>\r\n        {authStore.loggedUser && (\r\n          <>\r\n            <UserMyAccount\r\n              handleChangeType={handleChangeType}\r\n              companyType={companyType}\r\n            />\r\n          </>\r\n        )}\r\n      </WrapperTheme>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(SetupUserPage);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\ResetPassword\\index.tsx",["354","355"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { I18N } from '@/modules/lang/i18n.enum';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AccountStoreContext } from '@/modules/account/account.store';\r\nimport OnePage from '@/modules/theme/components/OnePage';\r\nimport { ResetPasswordDto } from '@/modules/account/account.dto';\r\nimport { USER_ROUTERS } from '@/modules/router.enum';\r\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\r\nimport UserResetForm from '@/modules/user/components/ResetForm';\r\nconst ResetPasswordCustomerPage = () => {\r\n  const history = useHistory();\r\n  const { token } = useParams() as any;\r\n  const accountStore = React.useContext(AccountStoreContext);\r\n  const authStore = React.useContext(AuthenticationStoreContext);\r\n\r\n  /*\r\n   * Translation\r\n   */\r\n  const { t } = useTranslation();\r\n  // const {} = I18N;\r\n\r\n  /*\r\n   * Action of confirm button\r\n   * @params: void\r\n   * @return: void\r\n   */\r\n  const handleConfirm = async (values: any) => {\r\n    const resetPasswordFormValue: ResetPasswordDto = {\r\n      password: values.password,\r\n      token,\r\n    };\r\n    await authStore.clearTmpUser();\r\n    const result = await accountStore.resetPassword(resetPasswordFormValue);\r\n\r\n    if (result) {\r\n      history.push(USER_ROUTERS.LOGIN);\r\n    }\r\n  };\r\n\r\n  const callbackValidate = React.useCallback(async () => {\r\n    return await authStore.validateResetToken(token, history);\r\n  }, [authStore, history, token]);\r\n\r\n  React.useEffect(() => {\r\n    callbackValidate();\r\n  }, [callbackValidate]);\r\n\r\n  return (\r\n    <>\r\n      <OnePage title={t('')}>\r\n        <UserResetForm\r\n          handleConfirm={handleConfirm}\r\n          userEmail={authStore.tmpUser?.email}\r\n        />\r\n      </OnePage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ResetPasswordCustomerPage);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\pages\\front\\VerifiedEmail\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\authentication.store.ts",["356"],"import React from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport { removeFromStorage, saveToStorage } from '@/libs/utils/storage.util';\r\nimport { LoginDto } from './account.dto';\r\nimport authenticateService from './authenticate.service';\r\n\r\nexport default class AuthenticationStore {\r\n  @observable loggedUser: any = null;\r\n  @observable tmpUser: any = null;\r\n  @observable loginFormValue: LoginDto = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  @action\r\n  async setLoginFormValue(data: LoginDto) {\r\n    this.loginFormValue = data;\r\n  }\r\n\r\n  @action\r\n  async setLoggedUser(data: any) {\r\n    this.loggedUser = data;\r\n  }\r\n\r\n  @action\r\n  async clearTmpUser() {\r\n    this.tmpUser = null;\r\n  }\r\n\r\n  @action\r\n  async login(history: any, url: string) {\r\n    const data = await authenticateService.login(this.loginFormValue);\r\n    if (data) {\r\n      this._setCurrentInfo(data);\r\n      this._redirectAfterLogin(history, url);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async validateToken(token: string, history: any) {\r\n    const data = await authenticateService.validateToken(token);\r\n    if (data) {\r\n      this._saveUser(data);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async validateResetToken(token: string, history: any) {\r\n    const data = await authenticateService.validateResetToken(token);\r\n    if (data) {\r\n      this.tmpUser = data;\r\n    }\r\n  }\r\n\r\n  @action\r\n  async logout(history: any, url: string) {\r\n    removeFromStorage('token');\r\n    this.loggedUser = null;\r\n    history.push(url);\r\n  }\r\n\r\n  private _setCurrentInfo(data: any) {\r\n    this.loggedUser = data;\r\n    saveToStorage('token', data.token);\r\n  }\r\n\r\n  private _saveUser(data: any) {\r\n    this.loggedUser = data;\r\n  }\r\n\r\n  private _redirectAfterLogin(history: any, url: string) {\r\n    return history.push(url);\r\n  }\r\n\r\n  // @action\r\n  // async registerToken(token: string) {\r\n  //   const result = await authenticateService.registerToken(token);\r\n  //   return result;\r\n  // }\r\n\r\n  @action\r\n  async validateEmailToken(token: string) {\r\n    const result = await authenticateService.validateEmailToken(token);\r\n    if (result) {\r\n      this.tmpUser = result;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport const AuthenticationStoreContext = React.createContext(\r\n  new AuthenticationStore()\r\n);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\user.enum.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\user.store.ts",["357","358","359"],"import React from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport { USER_STATUS, VERIFIED_STATUS } from './user.enum';\r\nimport {\r\n  UserRequestDto,\r\n  UpdateUserRequestDto,\r\n  UserUpdateFormDto,\r\n} from './user.dto';\r\nimport {\r\n  userRequestInit,\r\n  newUserInit,\r\n  userUpdateFormInit,\r\n} from './user.constants';\r\nimport userService from './user.service';\r\n\r\nexport default class UserStore {\r\n  @observable userRequestDto: UserRequestDto = userRequestInit;\r\n\r\n  // Account Setup\r\n  @observable accountForm: UpdateUserRequestDto = newUserInit;\r\n  @observable currentUserDetail: any = null;\r\n\r\n  // Admin - Listing\r\n  @observable users: any[] = [];\r\n  @observable totalCount: number = 0;\r\n\r\n  @observable deletedUsers: any[] = [];\r\n  @observable totalDeletedCount: number = 0;\r\n\r\n  // Admin - Edit Account\r\n  // @observable accountForm: UpdateUserRequestDto = newUserInit;\r\n  @observable userAdmin: any = null;\r\n  @observable\r\n  userUpdateForm: UserUpdateFormDto = userUpdateFormInit;\r\n\r\n  // Admin - Create User\r\n  // @observable\r\n  // adminUserForm: AdminUserRequestDto = adminUserFormInit;\r\n  @action\r\n  async setUserRequestDto(data: UserRequestDto) {\r\n    this.userRequestDto = data;\r\n  }\r\n\r\n  @action\r\n  async setUserUpdateForm(data: any) {\r\n    // this.userUpdateForm = data;\r\n    this.userUpdateForm.phoneNumber = data.phoneNumber ?? '';\r\n    this.userUpdateForm.email = data.email ?? '';\r\n    this.userUpdateForm.firstName = data.firstName ?? '';\r\n    this.userUpdateForm.lastName = data.lastName ?? '';\r\n    this.userUpdateForm.userStatus = +data.userStatus ?? USER_STATUS.ACTIVE;\r\n    this.userUpdateForm.verifiedStatus =\r\n      +data.verifiedStatus ?? VERIFIED_STATUS.UNVERIFIED;\r\n  }\r\n\r\n  // ----------------------------\r\n  // Account Setup\r\n  // ----------------------------\r\n  @action\r\n  async setAccountForm(data: any) {\r\n    this.accountForm.phoneNumber = data.phoneNumber;\r\n    this.accountForm.firstName = data.firstName;\r\n  }\r\n\r\n  @action\r\n  async getAccountInfo() {\r\n    const data = await userService.getAccountInfo();\r\n    this.currentUserDetail = data;\r\n    return data;\r\n  }\r\n\r\n  @action\r\n  async updateAccount(id: number) {\r\n    const data = await userService.updateAccount(this.accountForm, id);\r\n    return data;\r\n  }\r\n\r\n  @action\r\n  async uploadAvatar(formData: any, id: number) {\r\n    const data = await userService.uploadAvatar(formData, id);\r\n    return data;\r\n  }\r\n\r\n  @action\r\n  async deleteAccountFile(id: number, type: number) {\r\n    const data = await userService.deleteFiles(id, type);\r\n    return data;\r\n  }\r\n\r\n  // ----------------------------\r\n  // Admin\r\n  // ----------------------------\r\n\r\n  //\r\n  // User\r\n  //\r\n  // @action\r\n  // async setAdminUserForm(data: any) {\r\n  //   this.adminUserForm.firstName = data.firstName ?? '';\r\n  //   this.adminUserForm.lastName = data.lastName ?? '';\r\n  //   this.adminUserForm.email = data.email ?? '';\r\n  //   this.adminUserForm.phoneNumber = data.phoneNumber;\r\n  //   this.adminUserForm.accountRole = +data.accountRole;\r\n  // }\r\n\r\n  // @action\r\n  // async resetAdminUserForm() {\r\n  //   this.adminUserForm = adminUserFormInit;\r\n  // }\r\n\r\n  // public async addUserByAdmin() {\r\n  //   const data = await userService.addUserByAdmin(this.adminUserForm);\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async deleteUserByIdByAdmin(id: number) {\r\n  //   const data = await userService.deleteUserByAdmin(id);\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async verifyUserByAdmin(id: number) {\r\n  //   const data = await userService.verifyUserByAdmin(id);\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async getUserByAdmin(filter: UserListDto) {\r\n  //   const data = await userService.getUserByAdmin(filter);\r\n  //   const [users, count] = data;\r\n  //   this.users = users;\r\n  //   this.totalCount = count;\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async getDeletedUserByAdmin(filter: UserListDto) {\r\n  //   const data = await userService.getDeletedUserByAdmin(filter);\r\n  //   const [users, count] = data;\r\n  //   this.deletedUsers = users;\r\n  //   this.totalDeletedCount = count[0].total;\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async createUserByAdmin() {\r\n  //   const data = await userService.createUserByAdmin(this.userRequestDto);\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async getUserByIdByAdmin(id: number) {\r\n  //   const data = await userService.getUserByIdByAdmin(id);\r\n  //   this.userAdmin = null;\r\n  //   this.userAdmin = data;\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async updateUserByAdmin(id: number) {\r\n  //   const data = await userService.updateUserByAdmin(this.userUpdateForm, id);\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async restoreUserByIdByAdmin(id: number) {\r\n  //   const data = await userService.restoreUserByIdByAdmin(id);\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async uploadAvatarByAdmin(formData: any, id: number) {\r\n  //   const data = await userService.uploadAvatarByAdmin(formData, id);\r\n  //   return data;\r\n  // }\r\n\r\n  // @action\r\n  // async deleteAccountFileByAdmin(id: number, type: number) {\r\n  //   const data = await userService.deleteFilesByAdmin(id, type);\r\n  //   return data;\r\n  // }\r\n}\r\n\r\nexport const UserStoreContext = React.createContext(new UserStore());\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\account.store.ts",["360","361","362","363"],"import React from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport accountService from '@/modules/account/account.service';\r\nimport {\r\n  UserTableDto,\r\n  CreateUserDto,\r\n  ResetPasswordDto,\r\n  SetPasswordDto,\r\n} from '@/modules/account/account.dto';\r\n\r\nclass AccountStore {\r\n  @observable users: UserTableDto[] = [];\r\n  @observable totalCount: number = 0;\r\n  @observable currentUserDetail: any = null;\r\n  @observable createUserForm: CreateUserDto = {\r\n    email: '',\r\n    password: '',\r\n    phoneNumber: '',\r\n  };\r\n\r\n  @observable resetPasswordFormValue: ResetPasswordDto = {\r\n    token: '',\r\n    password: '',\r\n  };\r\n\r\n  @action\r\n  async setCreateUserForm(data: CreateUserDto) {\r\n    this.createUserForm = data;\r\n  }\r\n\r\n  @action\r\n  async setResetPasswordFormValue(data: ResetPasswordDto) {\r\n    this.resetPasswordFormValue = data;\r\n  }\r\n\r\n  @action\r\n  async register(lang: string) {\r\n    const data = await accountService.register(this.createUserForm, lang);\r\n    return data;\r\n  }\r\n\r\n  @action\r\n  async forgotPassword(email: string, lang: string) {\r\n    const data = await accountService.forgotPassword(email, lang);\r\n    return data;\r\n  }\r\n\r\n  @action\r\n  async resetCreateUserForm() {\r\n    this.createUserForm = {\r\n      email: '',\r\n      password: '',\r\n      phoneNumber: '',\r\n    };\r\n  }\r\n\r\n  @action\r\n  async changePassword(history: any, userID: number, url: string) {\r\n    const data = await accountService.changePassword(\r\n      userID,\r\n      this.resetPasswordFormValue\r\n    );\r\n    if (data) {\r\n      history.push(url);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async resetPassword(model: ResetPasswordDto) {\r\n    const data = await accountService.resetPassword(model);\r\n    return data;\r\n  }\r\n\r\n  @action\r\n  async changeLanguage(id: number, token: string, language: string) {\r\n    return await accountService.changeLanguage(id, token, language);\r\n  }\r\n\r\n  @action\r\n  async setPassword(model: SetPasswordDto) {\r\n    const data = await accountService.setPassword(model);\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default new AccountStore();\r\n\r\nexport const AccountStoreContext = React.createContext(new AccountStore());\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\lang.store.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\LoginForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\theme\\components\\Wrapper\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\theme\\components\\OnePage\\index.tsx",["364"],"import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport logo from '@/modules/theme/assets/images/logo.svg';\r\nimport SwitchLanguages from '@/modules/lang/components/SwitchLanguages';\r\n\r\n/*\r\n * Props of Component\r\n */\r\ninterface ComponentProps {\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  title?: string;\r\n}\r\n\r\nconst OnePage = (props: ComponentProps) => {\r\n  /*\r\n   * Props of Component\r\n   */\r\n  const { style, className, children, title } = props;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`wrapper one-page ${className ? className : ''}`}\r\n        style={style}\r\n      >\r\n        <div className=\"main\">\r\n          <header className=\"header\">\r\n            {/* <a href=\"/\" title=\"Jad\" className=\"logo\">\r\n              <img alt=\"Jad\" src={logo} />\r\n            </a> */}\r\n            <SwitchLanguages />\r\n            <div className=\"header-title\">{title}</div>\r\n          </header>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(OnePage);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\authenticate.service.ts",["365"],"import http from '@/libs/services';\r\nimport { LoginDto } from './account.dto';\r\n\r\nclass AuthenticateService {\r\n  private _getPrefix = () => {\r\n    return 'api/user';\r\n  };\r\n\r\n  accountPrefix: string = this._getPrefix();\r\n\r\n  public async login(model: LoginDto) {\r\n    const result = await http.post(`${this.accountPrefix}/login`, model);\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async validateToken(token: string) {\r\n    const result = await http.post(`${this.accountPrefix}/check-token`, {\r\n      token,\r\n    });\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async validateResetToken(token: string) {\r\n    const result = await http.post(`${this.accountPrefix}/check-reset-token`, {\r\n      token,\r\n    });\r\n    return result.data?.result;\r\n  }\r\n\r\n  // public async registerToken(token: string) {\r\n  //   const result = await http.post(\r\n  //     `${NOTIFICATION_API.PREFIX}/${NOTIFICATION_API.REGISTER}`,\r\n  //     {\r\n  //       token,\r\n  //       platform: 'web',\r\n  //     }\r\n  //   );\r\n  //   return result.data?.result;\r\n  // }\r\n\r\n  public async validateEmailToken(token: string) {\r\n    const commonUserPrefix = 'api/user';\r\n    const result = await http.get(`${commonUserPrefix}/verify-email/${token}`);\r\n    return result.data?.result;\r\n  }\r\n}\r\n\r\nexport default new AuthenticateService();\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\user.constants.ts",["366","367","368"],"import { VERIFIED_STATUS, USER_STATUS } from '@/modules/user/user.enum';\r\nimport { I18N } from '@/modules/lang/i18n.enum';\r\nimport {\r\n  UserRequestDto,\r\n  UpdateUserRequestDto,\r\n  UserUpdateFormDto,\r\n} from './user.dto';\r\n\r\nexport const VerifiedStatus = [\r\n  {\r\n    key: VERIFIED_STATUS.UNVERIFIED,\r\n    label: I18N.STATUS_UNVERIFIED,\r\n  },\r\n  {\r\n    key: VERIFIED_STATUS.PENDING,\r\n    label: I18N.STATUS_PENDING,\r\n  },\r\n  {\r\n    key: VERIFIED_STATUS.VERIFIED,\r\n    label: I18N.STATUS_VERIFIED,\r\n  },\r\n];\r\n\r\nexport const EmailVerifiedStatus = [\r\n  {\r\n    key: true,\r\n    label: I18N.STATUS_VERIFIED,\r\n  },\r\n  {\r\n    key: false,\r\n    label: I18N.STATUS_UNVERIFIED,\r\n  },\r\n];\r\n\r\nexport const getVerifiedStatus = (t: any, key: any) => {\r\n  return t(VerifiedStatus.find((item) => item.key === key)?.label);\r\n};\r\n\r\nexport const getEmailVerifiedStatus = (t: any, key: any) => {\r\n  return t(EmailVerifiedStatus.find((item) => item.key === key)?.label);\r\n};\r\n\r\nexport const getKeyVerifiedStatus = (label: string) => {\r\n  return VerifiedStatus.find((item) => item.label === label)?.key;\r\n};\r\n\r\nexport const UserStatus = [\r\n  {\r\n    key: USER_STATUS.ACTIVE,\r\n    label: I18N.USER_STATUS_ACTIVE,\r\n  },\r\n  {\r\n    key: USER_STATUS.INACTIVE,\r\n    label: I18N.USER_STATUS_INACTIVE,\r\n  },\r\n];\r\n\r\nexport const getUserStatus = (t: any, key: any) => {\r\n  return t(UserStatus.find((item) => item.key === key)?.label);\r\n};\r\n\r\nexport const getKeyUserStatus = (label: string) => {\r\n  return UserStatus.find((item) => item.label === label)?.key;\r\n};\r\n\r\n// export const AccountRole = [\r\n//   {\r\n//     key: ACCOUNT_ROLE.OWNER,\r\n//     label: I18N.CUSTOMER_ROLE_OWNER,\r\n//   },\r\n//   {\r\n//     key: ACCOUNT_ROLE.ADMIN,\r\n//     label: I18N.CUSTOMER_ROLE_ADMIN,\r\n//   },\r\n//   {\r\n//     key: ACCOUNT_ROLE.EXECUTIVE,\r\n//     label: I18N.CUSTOMER_ROLE_EXECUTIVE,\r\n//   },\r\n// ];\r\n\r\n// export const getAccountRole = (t: any, key: any) => {\r\n//   return key\r\n//     ? t(AccountRole.find((item) => item.key === key)?.label)\r\n//     : t(I18N.CUSTOMER_ROLE_OWNER);\r\n// };\r\n\r\n// export const getKeyAccountRole = (label: string) => {\r\n//   return AccountRole.find((item) => item.label === label)?.key;\r\n// };\r\n\r\n// export const AccountType = [\r\n//   {\r\n//     key: ACCOUNT_TYPE.COMPANY,\r\n//     label: I18N.CUSTOMER_TYPE_COMPANY,\r\n//   },\r\n//   {\r\n//     key: ACCOUNT_TYPE.INDIVIDUAL,\r\n//     label: I18N.CUSTOMER_TYPE_INDIVIDUAL,\r\n//   },\r\n// ];\r\n\r\n// export const getAccountType = (t: any, key: any) => {\r\n//   return t(AccountType.find((item) => item.key === key)?.label);\r\n// };\r\n\r\nexport const userRequestInit: UserRequestDto = {\r\n  email: '',\r\n  password: '',\r\n  phoneNumber: '',\r\n};\r\n\r\nexport const newUserInit: UpdateUserRequestDto = {\r\n  // phone: '',\r\n  // email: '',\r\n  // firstName: '',\r\n  // lastName: '',\r\n  // password: '',\r\n  // cardNo: '',\r\n};\r\n\r\n// Admin\r\n\r\nexport const userUpdateFormInit: UserUpdateFormDto = {\r\n  phoneNumber: '',\r\n  email: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  userStatus: USER_STATUS.INACTIVE,\r\n  verifiedStatus: VERIFIED_STATUS.UNVERIFIED,\r\n};\r\n\r\nexport const userDto = {\r\n  accountRole: '',\r\n  cardNo: '',\r\n  createdDate: '',\r\n  deletedAt: '',\r\n  email: '',\r\n  firstName: '',\r\n  id: '',\r\n  phoneNumber: '',\r\n  verifiedStatus: 0,\r\n};\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\user.service.ts",["369"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\account.service.ts",["370","371","372","373"],"import http from '@/libs/services';\r\nimport { removeConfirmationFields } from '@/libs/utils/apis.util';\r\nimport {\r\n  CreateUserDto,\r\n  ResetPasswordDto,\r\n  UpdateAccountDto,\r\n  SetPasswordDto,\r\n} from '@/modules/account/account.dto';\r\n\r\nclass AccountService {\r\n  private _getPrefix = () => {\r\n    return 'api/user';\r\n  };\r\n\r\n  accountPrefix: string = this._getPrefix();\r\n\r\n  public async forgotPassword(email: string, lang: string) {\r\n    const result = await http.get(\r\n      `${this.accountPrefix}/forgot-password/${lang}?email=${email}`\r\n    );\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async changePassword(id: number, model: ResetPasswordDto) {\r\n    const result = await http.post(\r\n      `${this.accountPrefix}/${id}/change-password`,\r\n      model\r\n    );\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async resetPassword(model: ResetPasswordDto) {\r\n    const result = await http.post(\r\n      `${this.accountPrefix}/reset-password`,\r\n      model\r\n    );\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async setPassword(model: SetPasswordDto) {\r\n    const result = await http.post(`${this.accountPrefix}/set-password`, model);\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async register(model: CreateUserDto, lang: string) {\r\n    const excludedModel = removeConfirmationFields(model);\r\n    const result = await http.post(\r\n      `${this.accountPrefix}/${lang}`,\r\n      excludedModel\r\n    );\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async updateAccount(id: number, model: UpdateAccountDto) {\r\n    const excludedModel = removeConfirmationFields(model);\r\n    const result = await http.put(`${this.accountPrefix}/${id}`, excludedModel);\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async changeLanguage(id: number, token: string, language: string) {\r\n    const result = await http.put(`api/user/lang/${language}`, {\r\n      token,\r\n    });\r\n    return result.data?.result;\r\n  }\r\n}\r\n\r\nexport default new AccountService();\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\ThankYouContent\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\RegisterForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\ForgotForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\MyAccount\\index.tsx",["374"],"import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { I18N } from '@/modules/lang/i18n.enum';\r\n\r\nimport UserAccountForm from '@/modules/user/components/AccountForm';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\r\n\r\nimport { REFERENCE_TYPE } from '@/modules/account/referenceType.enum';\r\nimport { UserStoreContext } from '../../user.store';\r\n\r\ninterface ComponentProps {\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  handleChangeType?: any;\r\n  companyType: boolean;\r\n}\r\n\r\nconst UserMyAccount = (props: ComponentProps) => {\r\n  const authStore = React.useContext(AuthenticationStoreContext);\r\n  const userStore = React.useContext(UserStoreContext);\r\n\r\n  /*\r\n   * Props of Component\r\n   */\r\n  const { className, children, handleChangeType, companyType } = props;\r\n\r\n  /*\r\n   * Translation\r\n   */\r\n  const { t } = useTranslation();\r\n  const { MESSAGES_UPDATE_SUCCESS, MESSAGES_DELETE_SUCCESS } = I18N;\r\n\r\n  const [avatar, setAvatar] = React.useState({\r\n    file: null,\r\n  });\r\n\r\n  const [initData, setInitData] = React.useState<any>(null);\r\n\r\n  const handleSubmit = async (values: any) => {\r\n    if (!companyType) {\r\n      values.companyId = null;\r\n    }\r\n    userStore.setAccountForm(values);\r\n    const data = await userStore.updateAccount(authStore.loggedUser.id);\r\n    if (data) {\r\n      const user = await userStore.getAccountInfo();\r\n      authStore.setLoggedUser(user ?? authStore.loggedUser);\r\n      toast.dismiss();\r\n      toast.success(t(MESSAGES_UPDATE_SUCCESS));\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Action of Delete button\r\n   *\r\n   * @param number id\r\n   * @return void\r\n   */\r\n  const handleDelete = async (type: REFERENCE_TYPE) => {\r\n    if (type === REFERENCE_TYPE.USER_PROFILE_IMG) {\r\n      const result = userStore.deleteAccountFile(\r\n        authStore.loggedUser.id,\r\n        REFERENCE_TYPE.USER_PROFILE_IMG\r\n      );\r\n      if (result) {\r\n        authStore.loggedUser.avatarUrl = '';\r\n        toast.dismiss();\r\n        bsCustomFileInput.init();\r\n        toast.success(t(MESSAGES_DELETE_SUCCESS));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUploadAvatar = (event: any) => {\r\n    setAvatar({ file: event.target.files[0] });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (authStore.loggedUser) {\r\n      authStore.loggedUser.cardNo = authStore.loggedUser.cardNo ?? '';\r\n      authStore.loggedUser.phoneNumber = authStore.loggedUser.phoneNumber ?? '';\r\n      authStore.loggedUser.email = authStore.loggedUser.email ?? '';\r\n      authStore.loggedUser.firstName = authStore.loggedUser.firstName ?? '';\r\n      setInitData(authStore.loggedUser);\r\n    }\r\n  }, [authStore.loggedUser]);\r\n\r\n  return (\r\n    <>\r\n      {initData && (\r\n        <UserAccountForm\r\n          className={className}\r\n          children={children}\r\n          handleSubmitForm={handleSubmit}\r\n          initialValues={initData}\r\n          handleUploadAvatar={handleUploadAvatar}\r\n          handleDeleteFiles={handleDelete}\r\n          handleChangeType={handleChangeType}\r\n          companyType={companyType}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(UserMyAccount);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\ResetForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\apis.util.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\referenceType.enum.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\LoginForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\theme\\components\\TopMenu\\index.tsx",["375"],"import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { LogoDto } from '@/libs/dto/Logo.dto';\r\nimport logoSvg from '@/modules/theme/assets/images/logo.svg';\r\nimport SwitchLanguages from '@/modules/lang/components/SwitchLanguages';\r\nimport NotificationSummary from '@/modules/notification/components/Summary';\r\nimport AccountSummary from '@/modules/account/components/AccountSummary';\r\nimport { USER_ROUTERS } from '@/modules/router.enum';\r\n/*\r\n * Props of Component\r\n */\r\ninterface ComponentProps {\r\n  className?: string;\r\n  logo?: LogoDto;\r\n}\r\n\r\nconst TopMenu = (props: ComponentProps) => {\r\n  const history = useHistory();\r\n\r\n  /*\r\n   * Props of Component\r\n   */\r\n  const {\r\n    className,\r\n    logo = {\r\n      className: '',\r\n      url: logoSvg,\r\n      alt: 'Logo',\r\n    },\r\n  } = props;\r\n\r\n  /*\r\n   * Setting logo responsive\r\n   */\r\n  const isMobile = useMediaQuery({\r\n    query: '(max-width: 991px)',\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={`top-menu ${className ? className : ''}`}>\r\n        {isMobile && (\r\n          <div\r\n            onClick={() => {\r\n              history.push(USER_ROUTERS.SETUP);\r\n            }}\r\n            className=\"logo-menu\"\r\n          >\r\n            <img\r\n              className={logo.className ? logo.className : ''}\r\n              src={logo.url ? logo.url : ''}\r\n              alt={logo.alt ? logo.alt : 'Logo'}\r\n            />\r\n          </div>\r\n        )}\r\n        <NotificationSummary />\r\n        <AccountSummary />\r\n        <SwitchLanguages />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(TopMenu);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\components\\PageTitle\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\services\\index.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\components\\SwitchLanguages\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\RegisterForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\ForgotForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\ThankYouContent\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\ResetForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\user\\components\\AccountForm\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\message\\message.constants.ts",["376"],"import { ErrorDto } from '@/modules/message/message.dto';\r\nimport { ERRORS } from '@/modules/message/message.enum';\r\nimport { I18N } from '@/modules/lang/i18n.enum';\r\n\r\nexport const Errors: ErrorDto[] = [\r\n  {\r\n    key: ERRORS.SELECTED_ITEMS,\r\n    label: I18N.MESSAGES_SELECTED_ITEMS,\r\n  },\r\n  {\r\n    key: ERRORS.FORGOT_SUCCESS,\r\n    label: I18N.MESSAGES_FORGOT_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.CONFIRM_DELETE,\r\n    label: I18N.MESSAGES_CONFIRM_DELETE,\r\n  },\r\n  {\r\n    key: ERRORS.CONFIRM_CANCEL,\r\n    label: I18N.MESSAGES_CONFIRM_CANCEL,\r\n  },\r\n  {\r\n    key: ERRORS.DELETE_SUCCESS,\r\n    label: I18N.MESSAGES_DELETE_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.UPDATE_SUCCESS,\r\n    label: I18N.MESSAGES_UPDATE_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.CREATED_SUCCESS,\r\n    label: I18N.MESSAGES_CREATED_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.IMAGE_SIZE,\r\n    label: I18N.MESSAGES_IMAGE_SIZE,\r\n  },\r\n  {\r\n    key: ERRORS.LOGIN_FAIL,\r\n    label: I18N.MESSAGES_LOGIN_FAIL,\r\n  },\r\n  {\r\n    key: ERRORS.CREATE_ERROR,\r\n    label: I18N.MESSAGES_CREATE_ERROR,\r\n  },\r\n  {\r\n    key: ERRORS.EMAIL_EXIST,\r\n    label: I18N.MESSAGES_EMAIL_EXIST,\r\n  },\r\n  {\r\n    key: ERRORS.INVALID,\r\n    label: I18N.MESSAGES_INVALID,\r\n  },\r\n  {\r\n    key: ERRORS.NOT_FOUND,\r\n    label: I18N.MESSAGES_NOT_FOUND,\r\n  },\r\n  {\r\n    key: ERRORS.ERROR,\r\n    label: I18N.MESSAGES_ERROR,\r\n  },\r\n  {\r\n    key: ERRORS.SELF_DELETE,\r\n    label: I18N.MESSAGES_SELF_DELETE,\r\n  },\r\n  {\r\n    key: ERRORS.SUPER_ADMIN_DELETE,\r\n    label: I18N.MESSAGES_SUPER_ADMIN_DELETE,\r\n  },\r\n  {\r\n    key: ERRORS.COMPANY_EXIST,\r\n    label: I18N.MESSAGES_COMPANY_EXIST,\r\n  },\r\n  {\r\n    key: ERRORS.ORDER_NOT_FOUND,\r\n    label: I18N.MESSAGES_ORDER_NOT_FOUND,\r\n  },\r\n  {\r\n    key: ERRORS.DRIVER_NOT_FOUND,\r\n    label: I18N.MESSAGES_DRIVER_NOT_FOUND,\r\n  },\r\n  {\r\n    key: ERRORS.PHONE_EXIST,\r\n    label: I18N.MESSAGES_PHONE_EXIST,\r\n  },\r\n  {\r\n    key: ERRORS.EXISTED,\r\n    label: I18N.MESSAGES_EXISTED,\r\n  },\r\n  {\r\n    key: ERRORS.TRUCK_OWNER_NOT_FOUND,\r\n    label: I18N.MESSAGES_TRUCK_OWNER_NOT_FOUND,\r\n  },\r\n  {\r\n    key: ERRORS.CREATE_ORDER_ERROR,\r\n    label: I18N.MESSAGES_CREATE_ORDER_ERROR,\r\n  },\r\n  {\r\n    key: ERRORS.NOT_ASSIGNED,\r\n    label: I18N.MESSAGES_NOT_ASSIGNED,\r\n  },\r\n  {\r\n    key: ERRORS.DELETED_ACCOUNT,\r\n    label: I18N.MESSAGES_DELETED_ACCOUNT,\r\n  },\r\n  {\r\n    key: ERRORS.KICKED_OUT,\r\n    label: I18N.MESSAGES_KICKED_OUT,\r\n  },\r\n  {\r\n    key: ERRORS.WRONG_PHONE_NUMBER_FORMAT,\r\n    label: I18N.MESSAGES_WRONG_PHONE_NUMBER_FORMAT,\r\n  },\r\n  {\r\n    key: ERRORS.PHONE_INPUT_TOO_LONG,\r\n    label: I18N.MESSAGES_PHONE_INPUT_TOO_LONG,\r\n  },\r\n  {\r\n    key: ERRORS.TAKEN,\r\n    label: I18N.MESSAGES_TAKEN,\r\n  },\r\n  {\r\n    key: ERRORS.TOKEN_ERROR,\r\n    label: I18N.MESSAGES_TOKEN_ERROR,\r\n  },\r\n  {\r\n    key: ERRORS.ORDER_PERMISSION,\r\n    label: I18N.MESSAGES_ORDER_PERMISSION,\r\n  },\r\n  {\r\n    key: ERRORS.LACK_DRIVER_OR_TRUCK,\r\n    label: I18N.MESSAGES_LACK_DRIVER_OR_TRUCK,\r\n  },\r\n  {\r\n    key: ERRORS.FINDNEWTRUCK_ERROR_STATUS,\r\n    label: I18N.MESSAGES_FINDNEWTRUCK_ERROR_STATUS,\r\n  },\r\n  {\r\n    key: ERRORS.NOT_VERIFIED,\r\n    label: I18N.MESSAGES_NOT_VERIFIED,\r\n  },\r\n  {\r\n    key: ERRORS.FOLDER_NOT_EXISTED,\r\n    label: I18N.MESSAGES_FOLDER_NOT_EXISTED,\r\n  },\r\n  {\r\n    key: ERRORS.COMPANY_NOT_EXISTED,\r\n    label: I18N.MESSAGES_COMPANY_NOT_EXISTED,\r\n  },\r\n  {\r\n    key: ERRORS.DRIVER_EXISTED,\r\n    label: I18N.MESSAGES_DRIVER_EXISTED,\r\n  },\r\n  {\r\n    key: ERRORS.CUSTOMER_CANCEL_ORDER,\r\n    label: I18N.MESSAGES_CUSTOMER_CANCEL_ORDER,\r\n  },\r\n  {\r\n    key: ERRORS.DRIVER_CANCEL_ORDER,\r\n    label: I18N.MESSAGES_DRIVER_CANCEL_ORDER,\r\n  },\r\n  {\r\n    key: ERRORS.EMAIL_NOT_VERIFY,\r\n    label: I18N.MESSAGES_EMAIL_NOT_VERIFY,\r\n  },\r\n  {\r\n    key: ERRORS.PHONE_OTP_VERIFY,\r\n    label: I18N.MESSAGES_PHONE_OTP_VERIFY,\r\n  },\r\n  {\r\n    key: ERRORS.INCORRECT_OTP,\r\n    label: I18N.MESSAGES_INCORRECT_OTP,\r\n  },\r\n  {\r\n    key: ERRORS.OTP_EXPIRED,\r\n    label: I18N.MESSAGES_OTP_EXPIRED,\r\n  },\r\n  {\r\n    key: ERRORS.PHONE_NOT_EXIST,\r\n    label: I18N.MESSAGES_PHONE_NOT_EXIST,\r\n  },\r\n  {\r\n    key: ERRORS.PICKUP_CODE_INCORRECT,\r\n    label: I18N.MESSAGES_PICKUP_CODE_INCORRECT,\r\n  },\r\n  {\r\n    key: ERRORS.ADMIN_NOT_FOUND,\r\n    label: I18N.MESSAGES_ADMIN_NOT_FOUND,\r\n  },\r\n  {\r\n    key: ERRORS.CUSTOMER_NOT_FOUND,\r\n    label: I18N.MESSAGES_CUSTOMER_NOT_FOUND,\r\n  },\r\n  {\r\n    key: ERRORS.EMPLOYEE_NOT_FOUND,\r\n    label: I18N.MESSAGES_EMPLOYEE_NOT_FOUND,\r\n  },\r\n  {\r\n    key: ERRORS.EMAIL_NOT_FOUND,\r\n    label: I18N.MESSAGES_EMAIL_NOT_FOUND,\r\n  },\r\n  {\r\n    key: ERRORS.SERVICE_TYPE_OR_ORDER_TYPE,\r\n    label: I18N.MESSAGES_SERVICE_TYPE_OR_ORDER_TYPE,\r\n  },\r\n  {\r\n    key: ERRORS.DETAIL_REQUIRED,\r\n    label: I18N.MESSAGES_DETAIL_REQUIRED,\r\n  },\r\n  {\r\n    key: ERRORS.CARGO_TYPE_OR_NAME,\r\n    label: I18N.MESSAGES_CARGO_TYPE_OR_NAME,\r\n  },\r\n  {\r\n    key: ERRORS.TRUCK_SPECIAL_OR_QUANTITY,\r\n    label: I18N.MESSAGES_TRUCK_SPECIAL_OR_QUANTITY,\r\n  },\r\n  {\r\n    key: ERRORS.CONTAINER_REQUIRED,\r\n    label: I18N.MESSAGES_CONTAINER_REQUIRED,\r\n  },\r\n  {\r\n    key: ERRORS.SUPPER_EXIST,\r\n    label: I18N.MESSAGES_SUPPER_EXIST,\r\n  },\r\n];\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\lang.constants.ts",["377"],"import { LanguageDto } from '@/modules/lang/lang.dto';\r\nimport { LANGUAGES } from '@/modules/lang/lang.enum';\r\n\r\nexport const languages: LanguageDto[] = [\r\n  {\r\n    key: LANGUAGES.EN,\r\n    label: 'English',\r\n    shortLabel: 'EN',\r\n  },\r\n  {\r\n    key: LANGUAGES.VI,\r\n    label: 'Tiếng Việt',\r\n    shortLabel: 'VN',\r\n  },\r\n];\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\constants\\rules.constants.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\enums\\button.enum.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\message\\message.enum.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\account\\components\\AccountSummary\\index.tsx",["378"],"import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { I18N } from '@/modules/lang/i18n.enum';\r\n\r\nimport { normalizeName } from '@/libs/utils/normalize.ulti';\r\nimport tadaLogo from '@/modules/theme/assets/images/tada-logo.svg';\r\nimport { AuthenticationStoreContext } from '@/modules/authentication.store';\r\nimport { USER_ROUTERS } from '@/modules/router.enum';\r\nimport { UserStoreContext } from '@/modules/user/user.store';\r\n\r\n/*\r\n * Props of Component\r\n */\r\ninterface ComponentProps {\r\n  className?: string;\r\n}\r\n\r\nconst AccountSummary = (props: ComponentProps) => {\r\n  const authStore = React.useContext(AuthenticationStoreContext);\r\n  const userStore = React.useContext(UserStoreContext);\r\n\r\n  const history = useHistory();\r\n\r\n  /*\r\n   * Props of Component\r\n   */\r\n  const { className } = props;\r\n\r\n  /*\r\n   * Translation\r\n   */\r\n  const { t } = useTranslation();\r\n  const { TOPMENU_WELCOME } = I18N;\r\n\r\n  return (\r\n    <>\r\n      <div className={`item box-info ${className ? className : ''}`}>\r\n        <span\r\n          onClick={() => {\r\n            history.push(USER_ROUTERS.SETUP);\r\n          }}\r\n        >\r\n          <>\r\n            {normalizeName(\r\n              authStore.loggedUser?.firstName ?? '',\r\n              authStore.loggedUser?.lastName ?? '',\r\n              t(TOPMENU_WELCOME)\r\n            )}\r\n          </>\r\n        </span>\r\n        <div\r\n          className=\"info-avatar\"\r\n          onClick={() => {\r\n            history.push(USER_ROUTERS.SETUP);\r\n          }}\r\n        >\r\n          <img\r\n            src={\r\n              authStore.loggedUser?.avatarUrl\r\n                ? authStore.loggedUser?.avatarUrl\r\n                : tadaLogo\r\n            }\r\n            alt=\"Logo\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(AccountSummary);\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\components\\CurrentDate\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\lang\\lang.enum.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\notification\\components\\Summary\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\utils\\normalize.ulti.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\notification\\notification.store.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\notification\\notification.service.ts",["379","380"],"import http from '@/libs/services';\r\nimport { prepareGetQuery } from '@/libs/utils/routes.util';\r\nimport {\r\n  NewNotificationDto,\r\n  NotificationListDto,\r\n} from '@/modules/notification/notification.store';\r\n\r\nclass NotificationService {\r\n  prefix = 'api/notification';\r\n  public async getList(filter: Record<string, any>) {\r\n    const result = await http.get(\r\n      `${this.prefix}${prepareGetQuery({ ...filter })}`\r\n    );\r\n    return result?.data?.result;\r\n  }\r\n\r\n  public async getNotifications(criteria: NotificationListDto) {\r\n    return await http.get(\r\n      `${this.prefix}/all${prepareGetQuery({ ...criteria })}`\r\n    );\r\n  }\r\n\r\n  public async setRead(id: number) {\r\n    const result = await http.put(`${this.prefix}/read/${id}`);\r\n    return result.data.result;\r\n  }\r\n\r\n  public async addNotification(model: NewNotificationDto) {\r\n    const result = await http.post(`${this.prefix}`, model);\r\n    return result.data?.result;\r\n  }\r\n}\r\n\r\nexport default new NotificationService();\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\notification\\notification.constants.ts",["381"],"import { NewNotificationDto } from '@/modules/notification/notification.store';\r\n\r\nexport const newNotificationFormInit: NewNotificationDto = {\r\n  title: '',\r\n  body: '',\r\n  sendToCustomer: false,\r\n  sendToTruckOwner: false,\r\n};\r\n\r\nexport const notificationType = [\r\n  {\r\n    key: '',\r\n    label: '',\r\n  },\r\n];\r\n\r\nexport const getNotificationType = (t: any, key: any) => {\r\n  return t(notificationType.find((item) => item.key === key)?.label);\r\n};\r\n","C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\routers\\routes.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\themes\\user\\page\\Home\\index.tsx",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\pages\\newlist\\index.tsx",["382"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\article.store.ts",["383","384","385"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\theme.enum.ts",[],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\article.service.ts",["386","387"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\components\\ArticleForm\\index.tsx",["388"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\components\\NewArticlelist\\index.tsx",["389","390","391","392","393","394","395"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\modules\\article\\components\\ArticlePreview\\index.tsx",["396","397","398","399"],"C:\\Users\\tanta\\Desktop\\text-sum\\text-sum-web\\src\\libs\\helpers\\helpers.js",["400"],{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","severity":1,"message":"406","line":3,"column":10,"nodeType":"407","messageId":"408","endLine":3,"endColumn":30},{"ruleId":"405","severity":1,"message":"409","line":4,"column":10,"nodeType":"407","messageId":"408","endLine":4,"endColumn":19},{"ruleId":"405","severity":1,"message":"410","line":5,"column":10,"nodeType":"407","messageId":"408","endLine":5,"endColumn":23},{"ruleId":"405","severity":1,"message":"411","line":6,"column":10,"nodeType":"407","messageId":"408","endLine":6,"endColumn":27},{"ruleId":"401","replacedBy":"412"},{"ruleId":"403","replacedBy":"413"},{"ruleId":"405","severity":1,"message":"414","line":5,"column":10,"nodeType":"407","messageId":"408","endLine":5,"endColumn":26},{"ruleId":"405","severity":1,"message":"415","line":10,"column":20,"nodeType":"407","messageId":"408","endLine":10,"endColumn":31},{"ruleId":"405","severity":1,"message":"416","line":10,"column":10,"nodeType":"407","messageId":"408","endLine":10,"endColumn":18},{"ruleId":"405","severity":1,"message":"417","line":5,"column":10,"nodeType":"407","messageId":"408","endLine":5,"endColumn":23},{"ruleId":"405","severity":1,"message":"418","line":23,"column":11,"nodeType":"407","messageId":"408","endLine":23,"endColumn":33},{"ruleId":"405","severity":1,"message":"418","line":25,"column":5,"nodeType":"407","messageId":"408","endLine":25,"endColumn":27},{"ruleId":"405","severity":1,"message":"419","line":14,"column":9,"nodeType":"407","messageId":"408","endLine":14,"endColumn":18},{"ruleId":"405","severity":1,"message":"420","line":4,"column":10,"nodeType":"407","messageId":"408","endLine":4,"endColumn":14},{"ruleId":"405","severity":1,"message":"421","line":8,"column":10,"nodeType":"407","messageId":"408","endLine":8,"endColumn":26},{"ruleId":"405","severity":1,"message":"416","line":4,"column":10,"nodeType":"407","messageId":"408","endLine":4,"endColumn":18},{"ruleId":"405","severity":1,"message":"422","line":5,"column":3,"nodeType":"407","messageId":"408","endLine":5,"endColumn":17},{"ruleId":"405","severity":1,"message":"423","line":6,"column":3,"nodeType":"407","messageId":"408","endLine":6,"endColumn":23},{"ruleId":"405","severity":1,"message":"424","line":7,"column":3,"nodeType":"407","messageId":"408","endLine":7,"endColumn":20},{"ruleId":"405","severity":1,"message":"425","line":5,"column":3,"nodeType":"407","messageId":"408","endLine":5,"endColumn":15},{"ruleId":"405","severity":1,"message":"417","line":6,"column":3,"nodeType":"407","messageId":"408","endLine":6,"endColumn":16},{"ruleId":"405","severity":1,"message":"421","line":7,"column":3,"nodeType":"407","messageId":"408","endLine":7,"endColumn":19},{"ruleId":"405","severity":1,"message":"426","line":8,"column":3,"nodeType":"407","messageId":"408","endLine":8,"endColumn":17},{"ruleId":"405","severity":1,"message":"427","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":12},{"ruleId":"405","severity":1,"message":"416","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":18},{"ruleId":"405","severity":1,"message":"422","line":4,"column":3,"nodeType":"407","messageId":"408","endLine":4,"endColumn":17},{"ruleId":"405","severity":1,"message":"423","line":5,"column":3,"nodeType":"407","messageId":"408","endLine":5,"endColumn":23},{"ruleId":"405","severity":1,"message":"424","line":6,"column":3,"nodeType":"407","messageId":"408","endLine":6,"endColumn":20},{"ruleId":"405","severity":1,"message":"423","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":30},{"ruleId":"405","severity":1,"message":"417","line":4,"column":3,"nodeType":"407","messageId":"408","endLine":4,"endColumn":16},{"ruleId":"405","severity":1,"message":"421","line":5,"column":3,"nodeType":"407","messageId":"408","endLine":5,"endColumn":19},{"ruleId":"405","severity":1,"message":"428","line":6,"column":3,"nodeType":"407","messageId":"408","endLine":6,"endColumn":19},{"ruleId":"405","severity":1,"message":"426","line":7,"column":3,"nodeType":"407","messageId":"408","endLine":7,"endColumn":17},{"ruleId":"405","severity":1,"message":"429","line":37,"column":10,"nodeType":"407","messageId":"408","endLine":37,"endColumn":16},{"ruleId":"405","severity":1,"message":"430","line":6,"column":10,"nodeType":"407","messageId":"408","endLine":6,"endColumn":17},{"ruleId":"405","severity":1,"message":"431","line":1,"column":10,"nodeType":"407","messageId":"408","endLine":1,"endColumn":18},{"ruleId":"405","severity":1,"message":"432","line":1,"column":10,"nodeType":"407","messageId":"408","endLine":1,"endColumn":21},{"ruleId":"405","severity":1,"message":"419","line":22,"column":9,"nodeType":"407","messageId":"408","endLine":22,"endColumn":18},{"ruleId":"405","severity":1,"message":"433","line":4,"column":3,"nodeType":"407","messageId":"408","endLine":4,"endColumn":21},{"ruleId":"405","severity":1,"message":"434","line":5,"column":3,"nodeType":"407","messageId":"408","endLine":5,"endColumn":22},{"ruleId":"405","severity":1,"message":"433","line":1,"column":10,"nodeType":"407","messageId":"408","endLine":1,"endColumn":28},{"ruleId":"405","severity":1,"message":"435","line":5,"column":10,"nodeType":"407","messageId":"408","endLine":5,"endColumn":24},{"ruleId":"405","severity":1,"message":"435","line":3,"column":10,"nodeType":"407","messageId":"408","endLine":3,"endColumn":24},{"ruleId":"405","severity":1,"message":"414","line":3,"column":26,"nodeType":"407","messageId":"408","endLine":3,"endColumn":42},{"ruleId":"405","severity":1,"message":"436","line":5,"column":10,"nodeType":"407","messageId":"408","endLine":5,"endColumn":27},{"ruleId":"405","severity":1,"message":"435","line":1,"column":10,"nodeType":"407","messageId":"408","endLine":1,"endColumn":24},{"ruleId":"405","severity":1,"message":"414","line":1,"column":26,"nodeType":"407","messageId":"408","endLine":1,"endColumn":42},{"ruleId":"405","severity":1,"message":"437","line":40,"column":30,"nodeType":"407","messageId":"408","endLine":40,"endColumn":43},{"ruleId":"405","severity":1,"message":"438","line":25,"column":5,"nodeType":"407","messageId":"408","endLine":25,"endColumn":10},{"ruleId":"405","severity":1,"message":"439","line":26,"column":5,"nodeType":"407","messageId":"408","endLine":26,"endColumn":14},{"ruleId":"405","severity":1,"message":"440","line":27,"column":5,"nodeType":"407","messageId":"408","endLine":27,"endColumn":13},{"ruleId":"405","severity":1,"message":"441","line":28,"column":5,"nodeType":"407","messageId":"408","endLine":28,"endColumn":10},{"ruleId":"405","severity":1,"message":"442","line":30,"column":5,"nodeType":"407","messageId":"408","endLine":30,"endColumn":25},{"ruleId":"405","severity":1,"message":"443","line":37,"column":9,"nodeType":"407","messageId":"408","endLine":37,"endColumn":24},{"ruleId":"405","severity":1,"message":"444","line":38,"column":10,"nodeType":"407","messageId":"408","endLine":38,"endColumn":19},{"ruleId":"405","severity":1,"message":"438","line":36,"column":11,"nodeType":"407","messageId":"408","endLine":36,"endColumn":16},{"ruleId":"405","severity":1,"message":"439","line":36,"column":18,"nodeType":"407","messageId":"408","endLine":36,"endColumn":27},{"ruleId":"405","severity":1,"message":"440","line":36,"column":29,"nodeType":"407","messageId":"408","endLine":36,"endColumn":37},{"ruleId":"405","severity":1,"message":"441","line":36,"column":39,"nodeType":"407","messageId":"408","endLine":36,"endColumn":44},{"ruleId":"445","severity":1,"message":"446","line":1,"column":10,"nodeType":"407","messageId":"408","endLine":1,"endColumn":16},"no-native-reassign",["447"],"no-negated-in-lhs",["448"],"@typescript-eslint/no-unused-vars","'FirebaseStoreContext' is defined but never used.","Identifier","unusedVar","'messaging' is defined but never used.","'saveToStorage' is defined but never used.","'LOCAL_STORAGE_KEY' is defined but never used.",["447"],["448"],"'CreateArticleDto' is defined but never used.","'setInitData' is assigned a value but never used.","'LoginDto' is defined but never used.","'CreateUserDto' is defined but never used.","'ONEPAGE_CUSTOMER_TITLE' is assigned a value but never used.","'userStore' is assigned a value but never used.","'I18N' is defined but never used.","'ResetPasswordDto' is defined but never used.","'UserRequestDto' is defined but never used.","'UpdateUserRequestDto' is defined but never used.","'UserUpdateFormDto' is defined but never used.","'UserTableDto' is defined but never used.","'SetPasswordDto' is defined but never used.","'logo' is defined but never used.","'UpdateAccountDto' is defined but never used.","'avatar' is assigned a value but never used.","'LogoDto' is defined but never used.","'ErrorDto' is defined but never used.","'LanguageDto' is defined but never used.","'NewNotificationDto' is defined but never used.","'NotificationListDto' is defined but never used.","'ArticleListDto' is defined but never used.","'removeUnusedProps' is defined but never used.","'ACCOUNT_EMAIL' is assigned a value but never used.","'style' is assigned a value but never used.","'className' is assigned a value but never used.","'children' is assigned a value but never used.","'title' is assigned a value but never used.","'handleChangePageItem' is assigned a value but never used.","'maxPage' is assigned a value but never used.","'totalPage' is assigned a value but never used.","no-unused-vars","'format' is defined but never used.","no-global-assign","no-unsafe-negation"]